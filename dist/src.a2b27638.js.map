{"version":3,"sources":["node_modules/three/build/three.module.js","node_modules/three/examples/jsm/controls/OrbitControls.js","node_modules/three/examples/jsm/exporters/OBJExporter.js","node_modules/three/examples/jsm/helpers/ViewHelper.js","src/index.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","legacyMode","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_this2","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","encoding","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_super2","options","_this3","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","depthTexture","samples","texture","setSize","WebGLRenderTarget","_RenderTarget","_super3","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_super4","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super5","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super6","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super7","_this8","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super8","count","_this9","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$1","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super9","_this10","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","error","remove","removeFromParent","clear","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_super10","_this11","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_super11","_this12","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","_super12","Uint8BufferAttribute","_BufferAttribute2","_super13","Uint8ClampedBufferAttribute","_BufferAttribute3","_super14","Int16BufferAttribute","_BufferAttribute4","_super15","Uint16BufferAttribute","_BufferAttribute5","_super16","Int32BufferAttribute","_BufferAttribute6","_super17","Uint32BufferAttribute","_BufferAttribute7","_super18","Float16BufferAttribute","_BufferAttribute8","_super19","_this13","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super20","Float64BufferAttribute","_BufferAttribute10","_super21","_id$2","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_super22","_this14","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super23","_this15","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super24","widthSegments","heightSegments","depthSegments","_this16","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_super25","_this17","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super26","_this18","PerspectiveCamera","_Camera","_super27","fov","aspect","_this19","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super28","renderTarget","_this20","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super29","_this21","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super30","_this22","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super31","_this23","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","renderMultiDraw","starts","counts","drawCount","multiDrawArraysWEBGL","elementCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super32","_this24","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","multiDrawElementsWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","_Texture4","_super33","_this25","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV1","HAS_ATTRIBUTE_UV2","HAS_ATTRIBUTE_UV3","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super34","_this26","isMeshDepthMaterial","_Material4","_super35","_this27","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_shadowSide","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_equationToGL","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_wrappingToGL","_filterToGL","_compareToGL","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super36","_this28","isArrayCamera","Group","_Object3D4","_super37","_this29","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","WebXRManager","_EventDispatcher6","_super38","_this30","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","cameraXR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","tempValues","cachedObjects","cachedObject","chunkSize","chunkOffset","infos","boundary","remainingSizeInChunk","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","setTimeout","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","WebGL1Renderer","_WebGLRenderer","_super39","FogExp2","Fog","Scene","_Object3D5","_super40","_this31","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super41","_this32","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super42","_this33","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super43","_this34","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_super44","_this35","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_super45","_this36","isBone","DataTexture","_Texture5","_super46","_this37","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super47","_this38","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","_Mesh2","_super48","_this39","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","ID_ATTR_NAME","_matrix","_invMatrixWorld","_identityMatrix","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","_Mesh3","_super49","_this40","customSort","_visibilityChanged","_initMatricesTexture","matricesArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","indexArray","idArray","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","getBoundingBoxAt","getBoundingSphereAt","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","idAttribute","setGeometryAt","dstIndex","srcIndex","posAttr","deleteGeometry","iv","setVisibleAt","getVisibleAt","batchId","_objectSpread","multiDrawStarts","multiDrawCounts","isWebGPURenderer","culled","_Material6","_super50","_this41","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super51","_this42","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super52","_this43","LineLoop","_Line2","_super53","_this44","_Material7","_super54","_this45","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super55","_this46","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super56","video","_this47","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super57","_this48","CompressedTexture","_Texture8","_super58","_this49","CompressedArrayTexture","_CompressedTexture","_super59","_this50","CompressedCubeTexture","_CompressedTexture2","_super60","_this51","isCompressedCubeTexture","CanvasTexture","_Texture9","_super61","_this52","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_super62","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","_this53","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super63","aRadius","_this54","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super64","curveType","_this55","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super65","_this56","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super66","_this57","isCubicBezierCurve3","LineCurve","_Curve5","_super67","_this58","isLineCurve","LineCurve3","_Curve6","_super68","_this59","isLineCurve3","QuadraticBezierCurve","_Curve7","_super69","_this60","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super70","_this61","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super71","_this62","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super72","_this63","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super73","_this64","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super74","phiStart","phiLength","_this65","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super75","capSegments","radialSegments","_this66","CircleGeometry","_BufferGeometry4","_super76","thetaStart","thetaLength","_this67","segment","CylinderGeometry","_BufferGeometry5","_super77","radiusTop","radiusBottom","openEnded","_this68","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super78","_this69","PolyhedronGeometry","_BufferGeometry6","_super79","_this70","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super80","_this71","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super81","thresholdAngle","_this72","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super82","_this73","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super83","_this74","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super84","_this75","OctahedronGeometry","_PolyhedronGeometry3","_super85","_this76","RingGeometry","_BufferGeometry9","_super86","innerRadius","outerRadius","thetaSegments","phiSegments","_this77","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super87","_this78","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super88","_this79","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super89","_this80","TorusGeometry","_BufferGeometry12","_super90","tube","tubularSegments","_this81","TorusKnotGeometry","_BufferGeometry13","_super91","_this82","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super92","_this83","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super93","_this84","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super94","_this85","RawShaderMaterial","_ShaderMaterial","_super95","_this86","_Material9","_super96","_this87","_MeshStandardMaterial","_super97","_this88","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_Material10","_super98","_this89","_Material11","_super99","_this90","_Material12","_super100","_this91","_Material13","_super101","_this92","_Material14","_super102","_this93","_LineBasicMaterial","_super103","_this94","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super104","_this95","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super105","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super106","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super107","ColorKeyframeTrack","_KeyframeTrack2","_super108","NumberKeyframeTrack","_KeyframeTrack3","_super109","QuaternionLinearInterpolant","_Interpolant4","_super110","QuaternionKeyframeTrack","_KeyframeTrack4","_super111","StringKeyframeTrack","_KeyframeTrack5","_super112","VectorKeyframeTrack","_KeyframeTrack6","_super113","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","_super114","response","_this96","_wrapNativeSuper","FileLoader","_Loader","_super115","_this97","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super116","CompressedTextureLoader","_Loader3","_super117","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super118","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super119","urls","DataTextureLoader","_Loader6","_super120","texData","TextureLoader","_Loader7","_super121","Light","_Object3D11","_super122","_this98","HemisphereLight","_Light","_super123","_this99","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super124","_this100","isSpotLightShadow","SpotLight","_Light2","_super125","_this101","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super126","_this102","_cubeDirections","_cubeUps","PointLight","_Light3","_super127","_this103","DirectionalLightShadow","_LightShadow3","_super128","_this104","isDirectionalLightShadow","DirectionalLight","_Light4","_super129","_this105","AmbientLight","_Light5","_super130","_this106","RectAreaLight","_Light6","_super131","_this107","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super132","_this108","MaterialLoader","_Loader8","_super133","_this109","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super134","_this110","BufferGeometryLoader","_Loader9","_super135","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super136","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super137","_this111","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","colorSpaceConversion","imageBitmap","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super138","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super139","_this112","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super140","_this113","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super141","_this114","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super142","_this115","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_super143","_this116","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super144","_this117","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super145","_this118","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super146","_this119","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","_super147","sphereSize","_this120","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super148","_this121","GridHelper","_LineSegments2","_super149","_this122","PolarGridHelper","_LineSegments3","_super150","sectors","rings","_this123","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super151","_this124","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super152","_this125","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super153","_this126","Box3Helper","_LineSegments6","_super154","_this127","PlaneHelper","_Line3","_super155","_this128","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super156","headLength","headWidth","_this129","setDirection","setColor","AxesHelper","_LineSegments7","_super157","_this130","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","_three","require","subClass","superClass","_setPrototypeOf","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","Reflect","construct","_possibleConstructorReturn","ReferenceError","sham","Proxy","valueOf","_changeEvent","_startEvent","_endEvent","_plane","TILT_LIMIT","OrbitControls","touchAction","cursor","minDistance","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","stopListenToKeyEvents","saveState","STATE","quat","quatInverse","lastPosition","lastQuaternion","lastTargetPosition","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","performCursorZoom","clampDistance","zoomChanged","newRadius","prevRadius","radiusDelta","dollyDirection","mouseBefore","mouse","mouseAfter","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","updateMouseParameters","rect","getBoundingClientRect","clientX","clientY","dist","handleMouseDownRotate","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","ctrlKey","metaKey","shiftKey","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","trackPointer","pointer","passive","OBJExporter","indexVertex","indexVertexUvs","indexNormals","parseMesh","nbVertex","nbNormals","nbVertexUvs","normalMatrixWorld","parseLine","parsePoints","ViewHelper","isViewHelper","animating","color3","interactiveObjects","dummy","orthoCamera","getAxisMaterial","posXAxisHelper","getSpriteMaterial","posYAxisHelper","posZAxisHelper","negXAxisHelper","negYAxisHelper","negZAxisHelper","turnRate","offsetWidth","targetPosition","targetQuaternion","handleClick","offsetHeight","prepareAnimationData","focusPoint","createElement","beginPath","fillStyle","font","textAlign","fillText","THREE","_interopRequireWildcard","_OrbitControls","_OBJExporter","_ViewHelper","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","allowArrayLike","it","_unsupportedIterableToArray","F","_e","normalCompletion","didErr","_e2","minLen","_arrayLikeToArray","arr","arr2","contours","controls","helper","clock","innerWidth","innerHeight","devicePixelRatio","appendChild","directionalLight","dlhelper","directionalLight2","dlhelper2","extrudeSettings","exportToOBJ","colorIndex","vertex1","vertex2","vertex3","faceNormal","dotProduct","geom","lineMaterial","mesh_length","mesh_height","mesh_width","shapegeo","planegeometry","div","animate","imgElement","getElementById","inputElement","URL","createObjectURL","onload","cv","imread","Mat","gray","cvtColor","COLOR_RGBA2GRAY","THRESH_BINARY_INV","allContours","MatVector","findContours","RETR_TREE","CHAIN_APPROX_SIMPLE","contoursToJSON","Module","onRuntimeInitialized","innerHTML","jsonContours","data32S","exporter","objData","Blob","link","href","download","click"],"mappings":";;AIAA,IAAA45L,KAAA,GAAAC,uBAAA,CAAA7M,OAAA;AACA,IAAA8M,cAAA,GAAA9M,OAAA;AACA,IAAA+M,YAAA,GAAA/M,OAAA;AACA,IAAAgN,WAAA,GAAAhN,OAAA;AHHA,ACAA,ACAA,ACGmE,IHHnED,ACAAA,ACAAA,KCGmEkN,CHHnE,ACAA,ACAA,GFAAjN,ACAAA,ACAAA,OFAA,ACAA,ACAA,cCGmE/sL,CAAA,6BAAAq2D,OAAA,mBAAAn2D,CAAA,OAAAm2D,OAAA,IAAAp2D,CAAA,OAAAo2D,OAAA,YAAA2jI,wBAAA,YAAAA,CAAAh6L,CAAA,WAAAA,CAAA,GAAAC,CAAA,GAAAC,CAAA,KAAAF,CAAA;AHQpD,ACNA,ACWA,ACboD,SHQpDiD,ACNAA,ACWAA,ACboD22L,QHQpDr5L,ACNAA,ACWAA,CFLA,ACNA,ACWA,eCboDP,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IHQpDiD,ACNAA,ACWAA,ACboDjD,CAAA,CAAAi6L,KHQpD,ACNA,ACWA,KCboD,SAAAj6L,CAAA,SHQpDW,ACNAA,ACWAA,MFLA,ACNA,ACWA,ACboDX,CAAA,sBHQpDW,ACNAA,ACWAA,CCboDX,CAAA,IHQpD,ACNA,ACWA,CFLAa,ACNAA,ACWAA,QFLA,ACNA,ACWA,YCboDb,CHQpDO,ACNAA,ACWAA,ACboD,CHQpD,ACNA,ACWA,UCboD25L,OAAA,CHQpD35L,ACNAA,ACWAA,CFLA,ACNA,ACWA,ACboDP,CAAA,QAAAC,CAAA,GAAA+5L,GHQpDz5L,ACNAA,ACWAA,CFLA,ACNA,ACWA,WFLAA,ACNAA,ACWAA,CFLA,ACNA,ACWA,QCboD,CAAAL,CAAA,OAAAD,CAAA,IAAAA,CAAA,CAAAwlB,CHQpD9kB,ACNAA,ACWAA,ECboD,CAAAX,CAAA,EHQpD,ACNA,ACWA,IFLAO,ACNAA,ACWAA,CFLA,ACNA,ACWA,CFLA2E,ACNAA,ACWAA,ECboDjF,CAAA,CAAAib,GAAA,CAAAlb,CAAA,EHQpD,ACNA,ACWA,KFLAW,ACNAA,ACWAA,ACboDN,CAAA,KHQpD,ACNA,ACWA,ACboDiF,IHQpD/E,ACNAA,ACWAA,CFLA,ACNA,ACWA,ICboD,CHQpDI,ACNAA,ACWAA,MFLA,ACNA,ACWA,CFLAP,ACNAA,ACWAA,ECboDQ,CAAA,GAAAT,GHQpD,ACNA,ACWA,GCboD,CAAAK,cAAA,GHQpDD,ACNAA,ACWAA,CFLA,ACNA,ACWA,ACboDJ,KHQpD8C,ACNAA,ACWAA,CCboD,CAAAk3L,KHQpD,ACNA,ACWA,CFLA55L,ACNAA,ACWAA,CFLA,ACNA,ACWA,iBCboD,WAAAS,CAAA,IAAAhB,CAAA,oBAAAgB,CAAA,IAAAb,MAAA,CAAAC,SAAA,CAAAE,cAAA,CAAAwB,IAAA,CAAA9B,CAAA,EAAAgB,CAAA,SAAAN,CAAA,GAAAE,CAAA,GAAAT,MAAA,CAAAg6L,wBAAA,CAAAn6L,CAAA,EAAAgB,CAAA,UAAAN,CAAA,KAAAA,CAAA,CAAAwa,GAAA,IAAAxa,CAAA,CAAAuZ,GAAA,IAAA9Z,MAAA,CAAAK,cAAA,CAAAH,CAAA,EAAAW,CAAA,EAAAN,CAAA,IAAAL,CAAA,CAAAW,CAAA,IAAAhB,CAAA,CAAAgB,CAAA,YAAAX,CAAA,CAAA65L,OAAA,GAAAl6L,CAAA,EAAAC,CAAA,IAAAA,CAAA,CAAAga,GAAA,CAAAja,CAAA,EAAAK,CAAA,GAAAA,CAAA;AHQpD,ACNA,ACWA,ACboD,SHQpDsG,ACNAH,ACWAG,ACboD4pD,gBFEpD9pD,EDMAG,AEKAA,MFLA,ACNA,ACWA,EFLAC,ACNAH,ACWAG,CCboDtG,CAAA,EAAA65L,CHQpD,AEKA,MDXA,ODMA15L,AEKAA,ACboD,CHQpD,AEKA,EDXA+F,IDMA/F,AEKAA,CFLA,AEKA,ACboD25L,EAAA,CHQpDxzL,ACNA,ACWAA,KFLA,AEKA,CFLA9B,AEKAA,GCboDpE,GHQpD,ACNA+F,ACWA,EFLAhG,AEKAA,CFLA,AEKA,ACboD,QFEpD,EDMAoG,AEKAA,UFLA,AEKA,ACboDvG,CAAA,CAAAI,CHQpDkG,ACNA7C,ACWA6C,KFLA,AEKA,ACboD,CHQpDnG,AEKAA,ACboDG,CHQpD,AEKA,EDXA,CDMAiG,AEKAA,ICboD,KAAAvG,CHQpD,AEKA,ACboD,CHQpDY,AEKAA,UFLA,AEKA,GFLA2F,AEKAA,OCboDuzL,EAAA,CHQpD,AEKA,CFLAl5L,AEKAA,MCboDknB,IHQpD,AEKA,CCboD,CAAAC,OAAA,CAAA/nB,CHQpDuG,AEKAA,ACboD,MAAAuzL,EAAA,EHQpD,AEKA,CFLAj5L,AEKAA,ACboDk5L,YHQpD,AEKA,eCboD,CAAA/5L,CAAA,MAAA65L,CHQpDtzL,AEKAA,UFLA,AEKA,EFLAA,AEKAA,CCboD,IAAAvG,CAAA,IHQpD,AEKA,CFLAc,AEKAA,MCboDd,CAAA,CHQpD,AEKA,ACboDwE,MAAA,GHQpD5E,AEKAA,MFLA,AEKA,CFLAK,AEKAA,WCboD65L,EAAA,CHQpD,AEKA,CFLAzzL,AEKAA,ACboDrG,CAAA,GAAA85L,EHQpD,AEKA,ACboD,EHQpDtzL,AEKAA,ICboDrG,CAAA,SHQpD,AEKA,CFLAoG,AEKAA,ACboDyzL,CAAA,SHQpD,AEKA,CFLAvzL,AEKAA,ECboDuzL,CHQpD,AEKA,CCboD,EHQpDzzL,AEKAA,UFLA,AEKA,GCboD5E,CAAA,EAAAq4L,CAAA,EAAAl6L,CAAA,WAAAA,EAAA,QAAAK,CAAA,IAAAH,CAAA,CAAAwE,MAAA,WAAAxB,IAAA,mBAAAA,IAAA,SAAA9C,KAAA,EAAAF,CAAA,CAAAG,CAAA,UAAAV,CAAA,WAAAA,EAAAw6L,EAAA,UAAAA,EAAA,KAAAv4L,CAAA,EAAAs4L,CAAA,gBAAAv2L,SAAA,iJAAAy2L,gBAAA,SAAAC,MAAA,UAAAjqI,GAAA,WAAAvuD,CAAA,WAAAA,EAAA,IAAAm4L,EAAA,GAAAA,EAAA,CAAAv4L,IAAA,CAAAvB,CAAA,MAAAF,CAAA,WAAAA,EAAA,QAAA6xB,IAAA,GAAAmoK,EAAA,CAAAn2L,IAAA,IAAAu2L,gBAAA,GAAAvoK,IAAA,CAAA3uB,IAAA,SAAA2uB,IAAA,KAAAlyB,CAAA,WAAAA,EAAA26L,GAAA,IAAAD,MAAA,SAAAjqI,GAAA,GAAAkqI,GAAA,KAAA14L,CAAA,WAAAA,EAAA,eAAAw4L,gBAAA,IAAAJ,EAAA,CAAAt2L,MAAA,UAAAs2L,EAAA,CAAAt2L,MAAA,oBAAA22L,MAAA,QAAAjqI,GAAA;AHQpD,ACNA,ACWA,ACboD,SHQpDxpD,ACNAN,ACWAM,ACboDqzL,aHQpD5zL,AEKAA,KDXAE,MDMA,ACNA,ACWA,EFLAM,ACNAL,ACWAK,ECboD3G,CAAA,EFEpD,AEFoDq6L,KHQpD,AEKA,CCboD,CHQpDzzL,AEKAA,MDXAzG,CAAA,CEFoDH,CAAA,EHQpD,AEKA,EDXAG,CAAA,GAAAmG,EDMAK,AEKAA,GDXA,CAAAnC,MDMA,ACNA,ACWA,CCboDxE,CHQpDoG,ACNAjG,ACWAiG,ACboD,CFEpD,UAAAG,MDMA,AEKA,CFLAJ,AEKAA,GDXA,CEFoDm0L,EFEpDh0L,KDMA,ACNA,ACWA,CFLAzG,ACNAM,ACWAN,CDXA,GAAA0G,KDMA,AEKA,ACboD,CAAAvG,CHQpD2G,AEKAA,ACboD,EAAA0zL,CFEpD,CAAAz5L,IEFoD,EHQpD,AEKA,IDXA,CEFoDd,CAAA,CHQpD8G,ACNAL,ACWAK,ECboDhH,MAAA,CAAAC,CFEpD,CDMA,ACNAe,ACWA,EFLAwF,AEKAA,KCboD,CAAAkuC,EFEpD,MEFoD,CAAA/yC,EHQpD,AEKA,CFLA4E,AEKAA,CDXAI,AEFoD,CAAAvG,CAAA,EAAAwF,KAAA,CHQpD,ACNA,ACWA,CDXA3E,CDMA+F,AEKAA,UCboD9G,CHQpD,ACNA,ACWA,ACboD,GHQpDF,AEKAA,MFLA,AEKA,CFLAK,AEKAA,OCboDD,CAAA,CAAA2E,KHQpD,ACNA4B,ACWA,CFLAJ,AEKAA,KCboD,EAAArG,CAAA,CFEpD,EDMA,ACNAyG,ACWA,ACboDvG,CAAA,CAAA2E,QFEpD,CAAA7D,EEFoD,CAAA8D,GHQpD9D,AEKAA,CCboD,CFEpD,KEFoDhB,CHQpD,AEKA,ACboD,GFEpDF,MAAA,CAAAK,IEFoDH,CAAA,IHQpDqG,AEKAA,KDXA,CAAAE,KDMA,AEKA,CDXA,EAAAG,CEFoDshB,KAAA,CAAAI,IAAA,CAAAloB,CAAA,CFEpD,CAAAuG,KEFoDzG,CAAA,IFEpD,CAAA2G,GAAA,GAAAF,UAAA,0CEFoD4f,IAAA,CAAArmB,CAAA,UAAAw6L,iBAAA,CAAAt6L,CAAA,EAAAq6L,MAAA;AHQpD,ACNA,ACWA,ACboD,SHQpD7zL,ACNAE,ACWAF,ACboD8zL,aFEpDn0L,EDMA7E,AEKAA,GFLA,AEKA,ACboDi5L,GAAA,EAAA9lK,CFEpD,EDMAhuB,ACNAE,ACWAF,ACboD,GHQpD,AEKA,GFLAI,AEKAA,ECboD4tB,EFEpD,CEFoD,CFEpD7tB,MDMA,AEKA,CFLAtF,AEKAA,GFLA,AEKA,CDXA,AEFoDmzB,GAAA,GAAA8lK,EFEpD5zL,CEFoD,CAAAnC,MAAA,EFEpD,AEFoDiwB,CHQpD/xB,AEKAA,CDXA0D,CEFoD,GAAAm0L,EHQpD,AEKA,CFLA9zL,AEKAA,ACboD,CAAAjC,EHQpD,AEKA,ICboD,GFEpD,CAAA2B,OEFoDhG,CAAA,CHQpDsG,AEKAA,EDXA,CDMA,ACNA5G,ACWA,ECboD26L,CHQpD1zL,AEKAA,GCboD,GHQpD,ACNA,ACWA,CFLAL,AEKAA,CDXAE,EDMA,AEKA,ACboDmhB,KAAA,CAAA2M,EFEpD,CEFoD,GAAAt0B,CAAA,EFEpDyG,CEFoD6tB,GAAA,EAAAt0B,CAAA,IFEpD,AEFoDq6L,EFEpDp0L,EEFoD,CAAAjG,CAAA,IAAAo6L,GAAA,CAAAp6L,CAAA,IFEpD,CAAAgG,KEFoDq0L,IAAA,EFEpD,EAAA5zL,WAAA,GAAAhH,MAAA,CAAAK,cAAA,CAAAkG,WAAA,iBAAArF,QAAA,mBAAAqF,WAAA;ADMA,ACNA,ACWA,ACXf,IAAI+kD,KHMWrkD,ACNAL,ACWAK,GCXH,EAAEwpD,KAAK,GHMJtpD,AEKAA,EDXArH,CAAA,EDMA,AEKA,EFLAsH,AEKAA,IFLA,ACNA7G,ACWA,CDXA,GAAA0G,IDMAnE,AEKAA,OFLA,AEKA,CFLAqE,ACNA,ACWAA,CDXArH,CAAA,GDMA,AEKA,kBFLAqH,AEKAA,KFLA,AEKA,MDXArE,OAAA,CAAAvC,CAAA,GDMA4G,AEKAA,CDXA5G,CAAA,GDMA,ACNA2G,ACWA,MFLAG,ACNA,ACWAA,CDXA9G,CAAA,EDMA,AEKA,GFLA4G,AEKAA,KFLA,AEKA,CFLA3G,AEKAA,MFLA,AEKA,CFLA8G,AEKAA,WFLA,AEKA,OFLAD,AEKAA,IFLA,AEKA,KFLAE,AEKAA,SFLA,AEKA,QFLAC,AEKAA,GFLA,AEKA,GFLAH,AEKAA,IFLA,AEKA,CFLA1F,AEKAA,IFLA,AEKA,CFLAwF,AEKAA,KFLA,AEKA,EFLAC,AEKAA,IFLA,AEKA,oBFLAtE,AEKAA,OFLA,AEKA,CFLA0E,AEKAA,GFLA,AEKA,uBFLAA,AEKAA,GFLA,AEKA,YFLA3D,AEKAA,SFLA,AEKA,4DFLAuD,AEKAA,IFLA,AEKA,gBFLAF,AEKAA,MFLA,AEKA,GFLAO,AEKAA,MFLA,AEKA,EFLAN,AEKAA,KFLA,AEKA;AFLA,ACNA,ACWA,ACVf,SHKed,ACNAY,ACWAZ,ACVN2sE,IAAIA,CAAC6nH,QFDC/6L,AECO,CFDP,CECSo2B,CHKT5vB,ACNAvG,ACWAuG,CDXA,IECe,EAAEw0L,CHKjB,AEKA,EFLAv0L,AEKAA,KCVyB,EAAEw0L,IHK3B,ACNAj4L,ACWA,ECViC,EAAEk4L,GFDnC,CAAAl7L,CAAA,AECwC,CHKxCwG,AEKAA,CCV0CqpC,IFD1C7vC,CAAA,AEC+C,EHK/C,AEKA,ACViDmyD,IAAI,EAAEl4B,CFDvDj6B,CAAA,IDMAyG,AEKAA,EDXA1G,AEC+D,CFD/D,CECiE,EFDjEC,CAAA,CAAAU,GDMA,AEKA,GDXA,CAAA8G,WDMAzD,ACNA,ACWAA,SFLA,AEKA,SDXAhE,CAAA,QAAAU,CAAA,GAAAV,CAAA,CAAA8B,IAAA,CAAA7B,CAAA,EAAAC,CAAA,gCAAA+C,OAAA,CAAAvC,CAAA,UAAAA,CAAA,YAAAsD,SAAA,yEAAA9D,CAAA,GAAAmH,MAAA,GAAAO,MAAA,EAAA3H,CAAA;ADMA,ACNA,ACWA,ECTb,EFAIk3L,EEAEr0K,GHIO+F,AEKAA,ECTF,GAAG,CFAC,CEAC,EFAD/gB,CDIFklL,AEKAA,MDTE,CAAAmK,CDIF,AEKA,EFLAlK,AEKAA,QDTE,EDIF,AEKA,eFLAA,AEKAA,UFLA,AEKA,mBFLAA,AEKAA,UFLA,AEKA,uBFLAjpL,AEKAA,SFLA,AEKA,0DFLAgpL,AEKAA,QFLA,AEKA,CFLA5sL,AEKAA,SFLA,AEKA,GFLAD,AEKAA,MFLA,AEKA,CFLAqB,AEKAA,MFLA,AEKA,CFLAyrL,AEKAA,UFLA,AEKA,IFLAA,AEKAA,UFLA,AEKA,CFLA7sL,AEKAA,SFLA,AEKA,IFLA8E,AEKAA,WFLA,AEKA,IFLAzE,AEKAA,KFLA,AEKA,EFLAusL,AEKAA,QFLA,AEKA,EFLA3rL,AEKAA,QFLA,AEKA,QFLAD,AEKAA,YFLA,AEKA,aFLAjB,AEKAA,MFLA,AEKA,CFLAK,AEKAA,cFLA,AEKA,CFLAwsL,AEKAA,QFLA,AEKA,iBFLA3rL,AEKAA,QFLA,AEKA,gBFLA4rL,AEKAA,UFLA,AEKA,EFLAC,AEKAA,eFLA,AEKA,CFLAF,AEKAA,QFLA,AEKA,EFLAC,AEKAA,UFLA,AEKA;AFLA,AEKA,EDTE,AEEf,IAAIxhI,GHESyhI,AEKAA,EDTEiK,GEEH,EAAE,OFFC,EDIF52L,AEKAA,CFLA,AEKA,EFLA+B,AEKAA,CFLA,AEKA,IFLA4qL,AEKAA,eFLA,AEKA,GFLA/sL,AEKAA,MFLA,AEKA,CFLAkF,AEKAA,cFLA,AEKA,GFLAlF,AEKAA,MFLA,AEKA,CFLAkF,AEKAA,cFLA,AEKA,CFLAqjH,AEKAA,IFLA,AEKA,cFLAwkE,AEKAA,gBFLA3sL,AEKAA,CFLA,AEKA,EFLA+B,AEKAA,CFLA,AEKA,IFLA/B,AEKAA,CFLA,AEKA,CFLA+E,AEKAA,SFLA,AEKA,GFLAhD,AEKAA,CFLA,AEKA,SFLA/B,AEKAA,CFLA,AEKA,YFLA2sL,AEKAA,eFLA,AEKA,CFLA3sL,AEKAA,CFLA,AEKA,EFLA+B,AEKAA,CFLA,AEKA;AFLA,AEKA,IDTEkE,AEGbilD,KHCW1iC,AEKAA,GCNH,CAACoC,MFHI,CEGG,CAAC,CHCNgiK,AEKAA,ACNO,IFHLgK,GDIF,AEKA,QFLA/J,ACJE,ACSFA,yBFLA,AEKA,GFLAC,AEKAA,yBFLA,AEKA,oBFLAC,AEKAA,qBFLA,AEKA,QFLAC,AEKAA,KFLA,AEKA,GFLA3vI,AEKAA,eFLA,AEKA,CFLAuvI,AEKAA,OFLA,AEKA,GFLArhJ,AEKAA,MFLA,AEKA,MFLAshJ,AEKAA,yBFLA,AEKA,QFLAI,AEKAA,SFLA,AEKA,GFLA5vI,AEKAA,eFLA,AEKA,OFLA14C,AEKAA,WFLA,AEKA,EFLA4mC,AEKAA,MFLA,AEKA,GFLA2hJ,AEKAA,OFLA,AEKA,CFLAC,AEKAA,SFLA,AEKA,CFLAH,AEKAA,KFLA,AEKA,EFLAviJ,AEKAA,SFLA,AEKA,EFLAwiJ,AEKAA,SFLA,AEKA,YFLA1hJ,AEKAA,MFLA,AEKA,GFLAyhJ,AEKAA,KFLA,AEKA,CFLAliJ,AEKAA,KFLA,AEKA,OFLAL,AEKAA,SFLA,AEKA,YFLA2iJ,AEKAA,0BFLA,AEKA,OFLA7hJ,AEKAA,MFLA,AEKA;AFLA,AEKA,EDTE,AEIf,OHAa6hJ,AEKAA,2BFLAz8F,AEKAA,IFLA,AEKA,EFLApvF,AEKAA,IFLA,AEKA,QFLAA,AEKAA,IFLA,AEKA,KFLAmB,AEKAA,OFLA,AEKA,CFLAnB,AEKAA,IFLA,AEKA,yBFLAA,AEKAA,IFLA,AEKA,2BFLAA,AEKAA,IFLA,AEKA,aFLAA,AEKAA,IFLA,AEKA,yBFLAkC,AEKAA,SFLA,AEKA,uEFLA4lB,AEKAA,sBFLA,AEKA,CFLAsnE,AEKAA,IFLA,AEKA;AFLA,AEKA,EDTEjqF,AEMfwkD,OHFa7hC,AEKAA,CCHL,GAAG,CFNI,CAAAutK,EEMAwC,KAAK,CAACxvE,GFNN,MDIFj5B,AEKAA,IFLA,AEKA,ACHqB,CAAC,OHFtBA,AEKAA,IFLA,AEKA,yBFLA08F,AEKAA,cFLA,AEKA,wEFLA18F,AEKAA,IFLA,AEKA;AFLA,AEKA,IDTElqF,AEMsBo8G,GFNtB,EDIFiqE,AEKAA,ICHiC,EAAE,oBHFnC,AEKA,eFLAI,AEKAA,OFLA,AEKA,qBFLAA,AEKAA,OFLA,AEKA,CFLAC,AEKAA,SFLA,AEKA,oBFLAD,AEKAA,OFLA,AEKA,CFLAC,AEKAA,SFLA,AEKA,CFLAG,AEKAA,IFLA,AEKA,2BFLAC,AEKAA,KFLA,AEKA,oCFLAvuD,AEKAA,OFLA,AEKA,CFLAn/H,AEKAA,SFLA,AEKA,CFLA2tL,AEKAA,OFLA,AEKA,CFLAjsL,AEKAA,IFLA,AEKA,CFLA2rL,AEKAA,OFLA,AEKA,CFLAC,AEKAA,SFLA,AEKA,CFLAnuD,AEKAA,OFLA,AEKA,8CFLAv/H,AEKAA,CFLA,AEKA;AFLA,AEKA,ECHwC,CAAC,CFNvCS,AEMwC,KHF1Cm9C,ACJE,ACSFA,EDPd,SAAA/yB,KDEctqB,AEKAA,CFLA,ACFP+4B,ACOO,IFLAskB,AEKAA,EDPD,EAAG,WDEF,AEKA,GFLAz9C,AEKAA,MFLA,AEKA,CFLAkF,AEKAA,cFLA,AEKA,GFLAlF,AEKAA,MFLA,AEKA,CFLAqC,AEKAA,cFLA,AEKA,CFLAkmH,AEKAA,IFLA,AEKA,cFLA9qE,AEKAA,gBFLAr9C,AEKAA,CFLA,AEKA,WFLAA,AEKAA,CFLA,AEKA,CFLA+E,AEKAA,SFLA,AEKA,IFLAnF,AEKAA,MFLA,AEKA,CFLAqC,AEKAA,cFLA,AEKA,CFLAjC,AEKAA,CFLA,AEKA,aFLAq9C,AEKAA,eFLA,AEKA,CFLAr9C,AEKAA,CFLA,AEKA;AFHf,AEGe,ECFbkrD,EDIIqsI,EDPJ,IAAI3vK,AEGI,CAACkG,GDIK,EDPJ,CCOIvmB,CCJE,CFHH,AEGI2+J,EFHF,GCOD,CAAAqxB,ACJS,CAACsD,SDIV,CCJoB,EAAE30B,MAAM,CAAC40B,WAAW,CAAC,IDIzCpzI,SAAA;AFJhB,EEIgBp/B,ACHd4iC,IFFA,IAAI2rI,AEEI,CDGM,ACHLx1E,CDGKk2E,SDLC,CCKD,EDLI,ACKJ7vI,ACHQ,CFFH,AEEIw+G,MAAM,CAAC60B,CDGhB,eCHgC,CAAC;AHAjD,EEGgB,ACFd7vI,IFFA,ACIc3iC,IDJVuuK,AEEI,CAACtsH,CDEK,GAAAhiD,KCFI,GAAG,CFFH,GAAG,ACIP,CDJQ,ACIR+uK,ACFY,UDEZ;AFFhB,EEIC,ACHCj0K,IFFA,IAAIyzK,AEEI,CDGTQ,ACHUp/B,IAAI,CAAC6iC,MFFE,ACKJllK,GDLO,CAAC,CEEK,CDGP,ACHQo1B,EDGNggE,MCHc,CAACA,GDGL,EAAG,KCHY,CAAC;AHAhD,EGEE0vE,EDCiC,EDHjC,CEEK,CDC4BvvE,EDH3BltB,AEEE,GDCyB,CCDrBi7F,EFFA,GAAG,AEEE,CAAC/xB,GFFCzyI,EEEI,CAAC,CAAC,UFFC,CAAC,CAAC;ADC9B,EGEEy7B,EDAiCpqD,EDFjC,CEEK,GFFCqe,AEEE,IAAI80K,CFFD,GAAG,CCEmB,ACAhB,CAACtjE,EFFA3iF,GEEK,CDAUokJ,ACAT,CAAC,OFFF,CAAC,CAAC,ACEQ;AFAnC,EGCElnI,EHDIo9H,AEEJpiE,EDHA,CEEK,CAACp8E,CDCN,CDHMhY,ECGN1O,IFFgB,ACDJ,ECGZ,ACDgB,CHDG,ACDJ,ACGfhnB,ECDmB,EFFAqzB,ACGnB,ECDuBwkK,KAAK,CAACjmJ,KAAK,CFFR,AEES,CFFR,CAAC,MEEe,CAAC;EHDvB9xC,EEIrBgqH,EFJyB,ACAzB,EDA2B,CEI3B,CDJMvgG,ACID0sK,EDJG,GAAG,IAAIh9K,GCIE,GAAG,IAAI,IDJF,CAAC,CAAC;ADAY,CAAC,CGGrC,EDGA6wG,EDJA,GCIA,CDJMxiE,ACID4uI,IDJK,GAAG,EAAE,ACID,GAAG,KAAK;AFLxB,EGGE3hK,EHHI43J,AEMJriE,EDHA,EEAM,CDGN,CAAK/sG,CCHI,IHHM,ACGN04K,AEAIoC,CDGF,EFNO,CEMJ,CCHI,CAAClsI,EDGDt4B,CDHAoiK,CAAEnlI,IAAI,EAAG,MCGF,CAAC,ACHU,CDGT,ACHU,EAAE,EAAEq0G,MAAM,CAAC20B,UAAU,GAAG30B,MAAM,CAAC40B,WAAW,EAAE,CAAC,EAAE,KAAK,CAAC;EHHtEz5L,AGIpBy0B,EDIA,EFRwB,EAAE,ACKzB,ACGKkf,ACJA,CAAC3Q,GFCF4yJ,ECGO,GAAG,ACJA,CAACv9K,EFCH,CCGMy5B,ACJA,CAAC,CFCJ,AEDK,CFCJ,CEDM,CAAC,EAAE,EAAE,GDIJ,ACJO5wB,CDIL,ICJU,CAAC,IDID,CAAC;AFRH,CAAC,GESnC,IDHC,ACGK0yB,IDHDiiJ,ECGO,GAAG,IDHD,ACGK/jJ,GDHF,CAAC,QCGM,CAAE,SAAU,CAAC;AFRvC,EGKE,EHLIw6I,AESJ,IDHC,ACGK+J,IDHDP,CDNQ,CESD,EFTI,CESD,IAAIhkJ,EDHH,GAAG,CAAC,MCGI,CAAE,SAAU,CAAC;EFTnB9xC,AGMlBq5L,EDKA,EFXsB,EAAE,ACQvB,ACGK/C,ECLE,EFEDh+J,CEFI,IAAIm0J,GFEA,GAAGj8H,GCGM,CDHF,CAACl4B,CCGI,EAAE,KDHE,SEFH,CAAC7D,MAAM,EAAEo1B,QAAQ,CAACggE,UAAU,CAAC;AHN3B,CAAC,GEY/B,IDFC,ACEK9iE,IDFCgvI,KCEQ,GAAG,IAAI3U,KDFE,GAAG,IAAIhkK,ICEA,CAAC,CAAC,QDFK,CAAC,CAAC;ADT1C,EGOE,EHPIukH,AEYJ,IFZQ,AEYF2uD,GFZK,EEYA,EFZIj0J,CEYD,IAAIljB,KFZA,CAAC,CAAC,OEYK,CAAC,CAAC;AFX7B,EGOE61C,EHPIu9H,AEYJ,GCLK,CFGJ,ACEKgK,ACLAx8K,EHPI,CGOD,CAAC,CHPG,AEYF,GAAG,ACLAg+K,CHPGjnI,GEYCtqB,CCLC,CAAC+2H,OHPE,CAAC,CAAC,GGOQ,CDKN,ACLO,CDKN,ACLO,CDKN,ACLO;AHNrC,IAAMivB,AEaJ,IDHC,ACGKgK,IDHCtuI,EDVO,GAAG/zC,EEaA,CDHF,CDVM,CAACwD,AEaF,CDHF2gB,EDVO,CAAE,AEaHw6C,EFbK,GAAG55D,ACUN,CAACsf,YAAY,CAAE,EDVA,CAACtkB,GEaA,CAAE,CAAE,CAAC,CFbG,ACUE,CDVD,ACUE,ACGJ,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AFbd,EGQpD,EHNIu4K,AEYJ+J,IDHC,IAAM9zI,GCGI,CAAC1f,CFZK,ECSH,CDTG98B,ECSAoyB,ECGG,CAACjgB,EFZJ,CAAAo0K,AEYO,CAAE,CDHD,ACGE,CDHDj0J,CCGG,CAAC,EAAE,CAAE,CAAC,IFZlB,ECSqB,CAAE,QAAS,CAAC,cDTjCxR,gBAAA;EAAAC,AGOjB,EDOA,ECPM2yK,EFGL,ACIKthK,GFdW,CAAAm0J,ACUV9pI,GAAG,CCII,EDJDrqB,CCII,GCPK,CDODovB,EFdJ,AGOQ,CFGJ,CDVJ1gC,ACUKwR,EEHOu/J,KAAK,CAAC56B,IFGD,CAAE,CCIJ,CAAE,CFdjB,CCUwB,CAAC,ACIL,EAAE,IAAI,ACPQ,CAAC,CDOP,IAAK,CAAC,CAAC57I,CCPQ,EAAE,CAAC,CAAC,IDOH,CAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC;EFdzD,AGQjBq4K,EDQA,EFhBiB1yK,ECWhB,ACKK/I,IFhBW,ACWVqkC,CCKI,EFhBMr7B,CEgBH,ECRE,CFGF,AEHG6b,CDQCojB,EDLD9tB,KDXA,AGQQ,CHRRm0J,AGQSp0K,EFGD,CAACmpC,ACKJ,ACRO,CDQLlpB,ACRM,CAAC,CAAC,GAAGpX,EFGD,CAAC,ACKH,CFhBf,ACWmB,CCKFu1K,ACRM,EAAE,EAAE,GAAGv1K,KAAK,EAAE,CDQL,CAAEyyB,ACRK,GAAGzyB,GDQD,CAAE,CAAC,ACRG,CAAC;EHNlE,AGOC,EDQA,ECRM24K,EDQAz7K,GFfPquK,EEeY,CCRG,EDQA,CCRG,GDQCrmI,CCRG2xI,IHPTrgK,CGOc,CAAC6tJ,IHPT,AEeI,CAAEjtJ,CFfJuxF,OEeY,EAAE4sE,CFfJ,EAAG,IGOgB,CAACmD,ODQD,CAAEhmJ,MAAO,CAAE,CAAC,ACRK,EAAE,EAAE,CAAC;EACvEob,EHRiC,AEgBjC,GCRK,CHR4Bg7D,ACWhC,ACKK3rG,ACRAtE,GAAG,CAAC6/K,CHRuB,AEgBtB,GAAG,IAAIxzI,QCRQ,CAAC,EDQL,CAAE9tB,QAAQ,EAAEm+J,eAAe,CAAEJ,MAAO,CAAE,CAAC;ECN7D,EHViCzxL,AEkBjCwZ,ECRM07K,EFELvzK,CCMI,CAACxF,IDNC,IAAI,ACMG,CFlBmB,AEkBlB8I,CAAC,EDND,CCMI1V,ACRI,EFELq8C,CDZei8H,AGUP,CDQH,CAACr4K,CDNF,CAAC7Q,ACMG,ACRIw0L,GDQD,CDNF,ACMG,CCRK,CAAC56B,CFEN,EDZG,ECYC,WEFkB,CAAC,QAAQ,EAAE,CAAC,CAAC;EACjE28B,EHTA9vE,AEiBA3rG,KFjBA,AEiBK,CAAC0C,EFjBNmG,MAAA,AEiBc,CFjBdhnB,AEiBeK,ACRE,CDQD,ACREyiC,GHTlB,AEiBmB,CAAE7uB,IAAI,ACRC,CDQAC,ACRCiE,EDQC,CCRE,CAAC,CDQA,ACRC,CDQA,ECRG6I,KAAK,EAAE,EAAE,CJvC9C,EIuCiDA,KAAK,EAAE,EAAE,GAAGA,KAAK,CAAC,iIJvCnE/iB,mBAAA,YAAAA,oBAAA,WAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MA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6sE,ECZgC,GHNhC,CAAK7xL,ACaH,AEPS60I,KFOH,CDbG,CGMO,CDYJ,CFlBA,ACaF/6I,ACKG6pB,CDLF,AEPKimC,GHNAr7B,ACaF,CAAC,CEPC,CFOCnzB,AEPDvB,CFOE,ACKG,CAACmB,EDLDkoD,CEPL,CDYU,GAAG,EFlBN,CAAC,ACaK,CDbJ,ACaK35B,ECKK,GDLA,EAAEzvB,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAE82L,QAAQ,EAAG,EAAG;AFnDpE,IGyDE,ECZE,EDYIkB,ECZAj9C,EFQH/8C,KERU,CFQJ,CAAClgF,EEROw8K,CDYG,GAAG,IAAI9iE,ACZF,CAAC,CAAC,CAAC,EAAE,IFQD,CAAEpuE,GCIE,CAAEyuI,IDJI,EAAE73L,CAAE,CAAC,SCIQ,CAAE60C,MAAO,CAAE,CAAC;AHxDlE,ICuCE,AEkBAmjJ,ICZI,IAAMz/J,MDYI,ACZE,CDYD1O,ECZIkxH,MDYI,CAAC75I,ACZE,CAACmsC,GDYC,ACZE,CAAC,EDYA,MAAM,ECZL6vG,EAAE;AJ5CpC,IAAM/1I,ACuCJ+jH,AEkBA,IAAM+sE,CFlBN,CAAKpK,AGK6B,EJ5CtB,AEqDT,GFrDSzmL,CCuCD,CGK4B,EHLzB,EGK6B6xL,CJ5C/B,AGyDQ,CHzDR9xL,ACuCMstB,EEkBK,CCbyB,CAACpa,EDatBm9G,EHzDf,GAAG,AI4CyC,CAAC0lB,EHLhC,AGKkC,CHLjC,AGKkC5mI,CJ5CxC,ACuCO,AGKkC,GDa5B,ACb+B8L,CDa7By1K,ICbkC,EAAE36C,EAAE,CAACz7I,CAAC,GAAG2gB,IDa1B,CAAE0yB,ACb6B,CAAC,KDavB,CAAE,CAAC;AHvDlE,IAAMztC,AGwDJ4wL,ICdoF,CJ1C3E,CI0C4E,EJ1C5E7wL,AEoDN42F,MAAM,ACIK,CHxDL,AEoDC5yE,ACIKvB,CHxDNxiB,KAAA,EGwDc,CHxDX,AGwDYnG,GDJF,CAAEwwD,ACII,GAAG,CDJH,CAAC17B,ICIQ,ODJI,CAAC;EFpD5B1uB,ECuCd,AEkBA,EHzDkB,EAAE,AGyDd4wL,ACdF3/J,CJ3CiB,KI2CX,CAACv0B,IAAI,CAACu0B,EDcI,GAAG,CCdD,CAAC,CAAC,CDcGi/F,ACdF,CAAC,YDcO,CAAEqgE,iBAAiB,CAAEN,MAAO,CAAE,CAAC;EHzDzChwL,ECwCvB2jH,AEkBAgtE,IH1D6B,AI4CzB9oJ,CHJJ,CDxC+B,ACwC1B0+I,CDxC2B,CEsD7B,CEVM,GAAG,EDcE,CAACjkK,CCdCovK,CHJA,GAAG,CAAC,AGIC,CAACrjD,CDcC,CAAC10I,GCdG,CDcC,ACdAq3B,GDcG,GCdG,CAAC,EDcE;EH1DH/wB,ECyClC0jH,AEmBA0sE,GH5DuC,CI6CnC,CJ7CqC,ACyCzC,CDzC0C,ACyCrC7pB,ECcFtmJ,MAAM,ACKK,CAACyc,EFnBC,CCcH,EDdMnM,ECcF,CCKM,CAACzhB,CDLJ0nF,ACKK,GFnBE,AEmBC,CAAC,EDLH,CAAC1nF,CAAC,GAAG,GAAG,GAAG0nF,MAAM,CAACv8F,CAAC,GAAG,GAAG,GAAGu8F,MAAM,CAACjzE,CAAC,GAAG,IAAI;EFvDzBtjB,EG6D5CqwL,ECfE,EJ9CgD,EAAE,AEyDlD,CFzDmD,OG6DvC,CAAC5zJ,QAAQ,CAACziC,CAAC,GAAG,CAAC;EH7D0BiG,EC2CvD,AEmBAqwL,ECfE,CJ/C0D,CE2D3D,CF3D6D,CAAC,AI+CvD3hD,IAAI,GAAG2E,CDeD,CAAC72G,KCfO,CAACmJ,EDeA,CAACtiB,ACfE,CDeD,ACfE,GDeC,CAAC,MCfDmyH,EAAE;EJ/CmCv1I,EC4CjEujH,AEmBA8sE,CH/DoE,EAAE,CI+CxC,CHH9B,CAAKjK,KGG8B,EHHvB,CEmBE,CAAC7pJ,AChBwB+0J,CHHxB,CAAC,GGG4B,CAAC5+K,EDgBtB,CAAC/D,CAAC,GAAG,AChBwB,CDgBtB,AChBuB4mI,CDgBtB,CChBwB,CAAC5mI,CAAC,GAAG8L,KAAK,EAAE86H,EAAE,CAACz7I,CAAC,GAAG2gB,KAAK,CAAC;AJ/CR,CAAC,GC6CzE8oG,AEmBA8sE,ECjBgF,EFc/E,AEdgF,CHFjF,CAAKhK,OAAO,CEmBE,CAAC5rK,CFnBA2V,IEmBK,CAACtd,GFnBE,MEmBO,CAAE,GAAI,CAAC;AH/DvC,IAAM7S,AGgEJqwL,ECjBE7hD,GJ/CO,CI+CH,CAACpyI,CJ/CEoD,GI+CE,CAACgvI,EDiBE,CHhEL,AGgEMlyG,CHhENt8B,AI+CO,CAAC,CAAC,CAAC,CAAC,CJ/CX,EGgEc,CHhEX,AGgEYnG,CAAC,GAAG,CAAE,CAAC;EHhEjBgG,EC8Cd,AEmBAwwL,ECjBE7oJ,EJhDkB,AE8DnB,EF9DqB,CAAC,AIgDhB,CFcDyU,AEdEmyF,GFcC,EEdI,CDiBC,ACjBAhyI,CDiBCoe,CDHDpb,EEdI,CAAC,CDiBC,CAACyT,ECjBEw+K,EFcA,EAAG,CEdE,CAACrjD,CDiBC,CAAE,GAAI,ACjBF,CDiBG,ACjBFQ,IAAI,CAAC,CAAC;EJhDhBzuI,EC+CzBujH,AEmBAgtE,ACjBA,CJjD4B,EAAE,CAAC,CC+C/B,CAAKjK,ACiBH,KAAM,GCEM,CDFFjuL,ACEGkkC,EDFF,GAAG,CDjBI,ACiBH,EAAE5iC,ACEI,CFnBA,AEmBCypB,CFnBA,ACiBJ,ACEK,GDFF84B,ACEK,CAAE,CAAC,CDFL,CAACp0B,KAAK,EAAEzvB,EAAC,GAAGsB,EAAC,EAAEtB,EAAC,EAAG,EAAEg3L,WAAW,EAAG,EAAG;EFhE/BnvL,ECgDjCqjH,AEmBAgtE,KFnBA,CAAKhK,CDhDqC,CEkEvCvjK,CFlEyC,CAAC,AEkExC,CAAC7M,GCCQ,CAACsE,KAAK,CFnBA,AEmBC3H,GFnBEsd,MCkBE,ACCK,CDDH8rB,ACCK,CFnBD,ECkBD,ACCM,CAAC,CDDL7jD,EAAE,CAAC;EFlEY8H,EGqE/CojH,AClBA,KDkBA,CAAKjwG,GAAG,CHrEmD,AGqEjD28K,EHrEmD,YGqEpC,CAAC;AHrEqC,CAAC,CImDhE,EHDA,AEoBA1sE,KAAA,CAAKjwG,CCnBL80C,CFiBG,CCEK,CAAE+nI,ACnBV,cDmByB,CAAC;AHrE5B,IAAM/vL,ACkDJ,AEoBAmjH,ACpBAt7D,KDoBA,CAAK30C,EDFFwM,CCEK,ACpBR,CDoBUswK,ACpBVz4L,CAAA,CJlDgB,AIkDhBywD,EFkBS,CFpEO3oD,AIkDhB,GFkBa,IFpEG,CAAAW,AEoEE,CCEO,CAAC,CDFL4iB,EAAE,CAACrU,CAAC,GAAG,EFpEZ,CEoEe,EFpEZ,CAAC,AEoEcqU,EAAE,CAAClpB,CAAC,GAAG,IAAI;AFnE/C,EIiDE,EJjDIuG,ACkDJkjH,AEoBAA,KFpBA,AEoBA,CFpBKijE,ACmBH,ACCGlzK,GAAG,CAAE+8K,EHtEM,GAAA5wL,ICkDE,GDlDF,ACkDK,CDlDLY,ACkDM,CAAC,AEoBE,CFpBD,AEoBE,UHtEV,GAAG,CAAC;AACtB,IAAMC,ACkDJijH,AEoBAA,ACtBAt7D,IFsBC,CDpBD,AEoBA,CFpBKw+H,AEoBAnzK,GAAG,ACtBR,CDsBUg9K,ACtBV12L,CAAA,EJhDiB,GAAA6F,GCkDC,GAAGiO,CDlDJ,CAAApN,AGsEQ,CAAC,CFpBD,CAACqN,EAAE,CAAC,CAAC,MDlDb,GAAG,CAAC;AACvB,EI+CE,EJ/CIpN,AGsEJgjH,KAAA,CAAKjwG,GAAG,CAAEi9K,OHtEW,GAAA9wL,IGsEI,CAAC,EHtEL,CAAAc,iBAAA,GAAG,CAAC;AAC3B,EI+CE,EJ/CIC,ACkDJ,AEqBAqvL,ECxBI0D,EFuBH,UFtEiB,GAAA9zL,AI+CC,CDwBD,CAACpD,CCxBG,GDwBC,CHvEL,AGuEO4zL,CHvEPzvL,aGuEsB,CHvEtB,AGuEuB,GHvEpB,CAAC;AACxB,IAAMC,ACkDJ,AEqBAovL,ACxBE,YJ/Cc,GAAApwL,GGuEE,CAACpD,GHvEH,CAAAoE,AGuEO,CAAE0vL,WHvET,GAAG,AGuEqB,CHvEpB,AGuEqB;AHtE3C,IAAMzvL,ACkDJ6iH,AEqBAssE,ACxBEvqK,IFuBD,CDpBD,AGHO,CHGFohK,CGHI,CFuBHzqI,EEvBM,GAAGxhC,EFuBF,CFtEO,EGuEF,ACxBE,CJ/CAhb,AGuEDpD,CDDDgD,CDpBE,EEqBG,CFrBA,AEqBE+wL,CFrBAhgK,CDlDL,CAAA1vB,EEsEO,EAAG,EDpBG,CAAC,CAAC,GEqBK,CAAC,IHvErB,GAAG,CAAC;AAC1B,IAAMC,ACkDJ4iH,AEqBAssE,ACzBsB,KHItB,CAAKlJ,ACqBH2I,MFvEc,GAAA7vL,GGuEE,CAACpD,EFrBC,CDlDJ,CAAAsE,AEuEG,ACAI,CFrBAyvB,ACqBHtW,ACAKu2K,QFrBM,CAAC,CAAC,CDlDjB,GAAG,AGuEqB,CHvEpB,AEuEe,ACAM,CDAJtmI,IAAI,CAAC17B,WAAY,CAAC;AFtEzD,IAAMztB,AGuEJivL,ACzBEx7C,MF0BA,GFxEW,EEwEL,CFxEK50I,AI8CC,EAAE,CF0BJpH,GAAC,ACDK,CHvEL,AGuEMgE,CHvENuE,CEwEG,CAAC,CCDM,CDCJjH,ACDM22L,GDCL,EFxEP,CEwEUr0I,EFxEP,CAAC,IEwEa,CAACn0B,ACDS,CAAC,IDCL,EAAEzvB,GAAC,GAAGsB,GAAC,EAAEtB,GAAC,EAAG,EAAE+2L,SAAS,EAAG,EAAG;AFvEpE,EI8CE,CAAC,CJ9CGvuL,ACkDJ,AEqBAgvL,QHvEY,AEyET1gK,GFzES1vB,GEyEH,CAAC0W,GFzEE,AGuEM,CHvENtV,AGuEOxE,IAAI,CAAEk0L,GHvEb,GAAG,CAAC,GEyEa,CAAEt0I,GCFS,CAAC,GDEH,EAAE5jD,GAAE,CAAC;AFxE7C,EI+CEw5B,EJ/CI/wB,ACkDJ,AEsBA,IAAM0wB,ECzBE,GDyBG,ACzBA,CJ/CG,EGwEA,CHxEA/xB,AI+CC6xL,GDyBGxkK,ECzBE,CAAC6mH,CJ/CP,CAAA7yI,SGwEW,CHxEX,AGwEY,CAAC,EHxEV,AI+CmB,CJ/ClB,AI+CmB2mC,KAAK,EAAE8rJ,eAAe,CAAC;AJ9C9D,EI+CE1hK,EJ/CI9wB,ACkDJwiH,AEsBA,IAAMsrB,CFtBN,CAAK+3C,AGHG,CDyBC,ACzBApwK,CF0BN,ECDS,GAAG,ACzBA,CAAC,CAAC,EJ/CI,ECkDH,CDlDG/W,ECkDA,KDlDA,ACkDK,CDlDLsB,iBAAA,GAAG,CAAC,CAAC,CAAC;AAC7B,EI+CE8wB,EJ/CI7wB,ACkDJuiH,AEsBA,IAAMitE,CFtBN,CAAK3J,AGHG,CAAC9kJ,CF0BN5S,EFzEW,EGwEA,CHxEA1vB,CEyEL,AE1BO,CF0BNwU,ACDO,ACzBAq9K,CDyBC,GFtBA,AEsBG5jL,CHxEP,AI+CQ,CJ/CR1M,AI+CSyR,CHGF,CEsBI,CAAC9E,EFtBD,AEsBG,CDCN,ACDO,CDCL2hL,ACDM,ECzBE,CJ/ClB,AI+CmBn/K,GJ/ChB,CAAC,II+CuB,CAAC,EAAE,CAAC,CAAC,CF0BJ,CAAC,CAACoC,SAAS,CAAC,CAAC;AFxEzD,EI+CEw3C,EJ/CI9oD,EI+CA,GAAG,IAAIqwL,KJ/CO,AI+CF,CAAC3xI,EJ/CClgD,EI+CG,CAACoyB,IJ/CJ,CAAA5wB,GI+CY,CAAC,UJ/Cb,GAAG,CAAC;AACxB,IAAMC,ACkDJ,AEsBAqiH,KAAA,CAAKt6D,EDCF,ICDQ,GAAG,CHxEM,GAAAxpD,MGwEK2jD,CHxEL,CAAAliD,MGwEa,EAAG,QHxEhB,GAAG,CAAC;AAC1B,EI+CE,EJ/CIC,ACkDJ,EEuBC,IAAI,CAACunB,CDAH5I,MAAM,GCAO,CDAH,ACAIzM,CHzEM,GAAA5T,AGyEF,CDAH,ACAKuuB,GDAFmB,GFzEE,AGyEM,CHzENhuB,AGyEOunB,EDAH,CAAC/Z,CAAC,GAAG,GAAG,ACAM,CAAC,CAAC2K,CDAL6V,KCAW,CHzE1B,AEyEqB,ACAM,CDALr1B,ACAM,CDAL,CFzEpB,CAAC,CEyEsB,GAAG,GAAGq1B,MAAM,CAAC/L,CAAC,GAAG,IAAI;AFxExE,EI+CEowK,EJ/CIpyL,ACkDJmiH,EEuBC,GFvBD,CAAKujE,ACwBH,ACDG,CAAC5iJ,EC1BK,CAAC6lB,IAAI,CAAC,CJ/CG,ACkDL,GDlDKtqD,ACkDF,IAAI,CEuBC,CAAC,CHzEJ,AGyEK,CHzEL2B,gBAAA,GAAG,CAAC;AAC1B,IAAMC,ACkDJkiH,EEwBC/xF,EDCA,CDzBD,CAAKu1J,CEwBC,CAACn1K,GAAG,CAAE,CAAC,CH1EK,CCkDJ,AEwBC,CAAC,CH1EEnS,CCkDD,AEwBC,CAAE,CAAC,CFxBD,GDlDF,CAAA4B,cAAA,GAAG,CAAC;AACxB,EI+CE,EJ/CIC,EG0EHkwB,KAAK,CAACrE,GH1EQ,GAAA1tB,OAAA,CAAA6B,CG0EO,CAAE0sB,MAAM,CAACtF,EH1EhB,GAAG,GAAG,EG0EqB,CAAC;AHzE7C,EI+CE,EJ/CInnB,ACkDJ,EEyBC,AC5BKu1G,EF4BL,ECAKtlF,KAAK,AC5BI,CD4BH7iB,CAAC,CC5BK,EJ/CE,CG2EH,CAAC,AC5BI,CJ/CFlP,AI+CG,CD4BF,AC5BG,MJ/CJ,CAAA8B,gBAAA,GAAG,GAAG;AAC5B,IAAMC,ACkDJ+hH,IE0BE0sE,CF1BF,CAAKjJ,YAAY,AE0BD,CAACl/I,EF1BG,EDlDO,ECkDH,CDlDGroC,CG4EF,CAACwuC,KH5EC,CAAAzsC,CG4EM,GAAG,CAAC,kBH5EV,GAAG,GAAG;AACnC,EI+CE,EJ/CIC,ACkDJ8hH,ICyBC,ACCC8sE,CF1BF,CAAKpJ,ECyBClrI,GF3ES,GAAAt8C,CE2EF,EDzBG,CE0BA,CAACqoC,CF1BE,ACyBD,CF3EH,CAAArmC,CCkDO,CCyBA,EAAG,CCCA,CAACwsC,KH5EX,EG4EkB,CH5Ef,EG4EkB,CH5Ef,EG4EkB;AH3EzC,EI+CE,EJ/CIvsC,EG6EH,AC9BKs6C,CD8BJ,GDDA,GCCM,EH7EO,AE4EP,AE7BO,GJ/CAv8C,AI+CGoyB,CF6BNx5B,GAAC,GF5EE,AE4EC,CF5EDqJ,AE4EE,AE7BS,CAACqwB,CF6BRp4B,GAAC,GAAGoiD,GF5ER,EI+CwB,CJ/CrB,AI+CsB,CF6BV,CAACj0B,CF5EV,IE4Ee,EAAEzvB,CE7BY,CAAC,CF6BZ,AE7BaiV,GF6BV3T,EE7Be,CF6Bd,EAAEtB,GAAC,IAAI,CAAC,EAAG;AF3ExD,EIgDE,EJhDIsJ,ACkDJ,EGFM4iC,ED8BJ0rJ,IDDC,EF7EW,CIgDC,EJhDDxwL,AE6EL,CE7BS,EAAE,CF6BPgP,CAAC,ACCE,CAACq5B,CH9EH,CAAAnmC,AE6EG,CAAC,EAAE8M,CAAC,ECCI,CDDD,ACCEw/B,CDDD,EF7EX,AE6Eax/B,CAAC,EF7EX,AE6Ec,CCCE,CDDC,CF7Ed,CG8EgB,GAAG;AH7EzC,EIiDE,EJjDI7M,ACkDJ2hH,EGDM25D,ED6BJmT,CF5BF,CAAKnJ,EGDO,CJjDC,CE8ET,CE7BW,CJjDFznL,AIkDX,EF4BQ60B,CD5BI,AC4BH,GD5BM,AC4BHynB,ACAE,CH9EH,AG8EIjU,CH9EJlmC,AIkDH,EHAW,GC4BA,CAACyU,CCAG,CAAC43B,CH9Eb,CE8Ea,CAAE51C,CF9EZ,EE8Ea,CF9EV,AG8Ec,EDADoW,CAAE,ACAE,CDAD,ACAE,GDAC,CAAC;AF7EzC,EIiDc,EJjDR5M,ACkDJ0hH,EE6BC,GF7BD,CAAK4jE,IC6BDpmI,IF/Ec,ACkDL,AC6BL,CAAEtyC,CAAC,CF/EOhP,ACkDF,AC6BH,GD7BM,AC6BDsvL,IF/EA,CAAAltL,ME+EW,GAAGyyB,CAAC,IF/Ef,AE+EsB2nB,GF/EnB,GAAG,CE+EuB,IAAIC,GAAG,GAAG,GAAG,IAAKA,GAAG,GAAK8yI,cAAc,GAAG16J,CAAC,GAAK,EAAE,CAAE,IAAK2nB,OAAO,GAAG,GAAG,IAAKgzI,YAAY,GAAG36J,CAAC,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE;AF9E7J,EIiDI,EJjDExyB,ACkDJyhH,EE8BC,GF9BD,CAAK6jE,AE8BC51J,AC/BI,CAAE,CF+BT,GCAQ,CAAC13B,CAAC,IAAI,CAAC,EAAG,EHhFK,ECkDH,CDlDG2F,ECkDA,IAAI,CDlDJ,ACkDK,CDlDLqC,ACkDM,sBDlDN,GAAG,GAAG;AAClC,EIgDc,CACX,CJjDGC,ACkDJwhH,IE+BE4sE,CF/BF,CAAK9I,QDlDa,GAAA5nL,ACkDF,CE+BA,CAACqoC,CF/BE,GAAG,CDlDJ,ACkDK,CDlDL/lC,ACkDM,EE+BC,CAACksC,OAAO,GAAG,CHjFlB,AGiFmB,GHjFhB,GAAG;AAC1B,EIkDE,EJlDIjsC,ACkDJuhH,EGAIkwE,ED+BFnD,CF/BF,CAAKhJ,EC8BF,IE9BW,GAAG,CAAC,EHAD,AE+BD,CAACx/I,EF/BG,CDlDM,GAAAroC,CCkDD,CE+BA,CAACwuC,IHjFA,CAAAjsC,EGiFO,GAAG,GAAG,cHjFb,GAAG,GAAG;AAClC,EImDE,EJnDIC,EGkFH,CAAC,AC/BG,IAAI5J,CF6BNynB,AE7BO,CD+BF,EC/BK,CAAC,EJnDI,AEgFT,AE7BOznB,CAAC,EJnDCoH,CEgFL,AE7BOu8C,IF6BH,EFhFC,CAAA/5C,AEgFE8+C,EE7BS,CAACrkD,CF6BN,CAAC4iF,IAAI,AE7BO,CF6BL,CE7BOjnF,CAAC,CF6BJ,CFhFjB,AEgFkB,EE7BO,CJnDtB,AEgFkB,AE7BK,EAAE,CJnDtB,CEgFmB;AF/E7C,IAAM6J,ACkDJ,AGCE,IDgCAiuL,EDFA,YCEc,CAACroJ,GHnFS,GAAAroC,EGmFD,CAACwuC,IHnFA,CAAA/rC,EGmFO,GAAG,GAAG,cHnFb,GAAG,GAAG;AAClC,IAAMC,ACkDJ,AGCE,IF+BD,ACCCmuL,AChCMoD,CF+BN,MAAM,AE/BO,GJnDG,AImDA,GJnDAj0L,CGmFF,AChCM6xL,CDgCLxpJ,IChCU,CJnDT,AImDUhb,CJnDV3qB,EGmFO,CAAC8rC,GChCS,CAAC+N,GDgCH,GAAG,CHnFlB,AGmFmB,EChCQ,CJnDxB,AImDyB3jD,CAAC,CAAC,CJnDxB,CImD0B2jD,SAAS,CAAC3jD,CAAC,GAAG,CAAC,CAAC,EAAE2jD,SAAS,CAAC3jD,CAAC,GAAG,CAAC,CAAC,CAAC;AJlDvF,IAAM+J,ACkDJmhH,AGCE,EDiCD,ECjCOowE,CHDR,CAAKpM,ACiCH,KAAM,AEhCO,GAAG,CFgCNlvL,CDjCG,ECiCF,AEhCSi5L,CHDJ,ECiCF,CFnFU,AEmFT,CEhCU,CHDJ,ACiCJ33L,AEhCSmzB,CJnDFrtB,EEmFN,GAAGgiD,CEhCY,CJnDT,AImDUzF,CJnDV55C,KEmFK,CAAC0lB,EEhCa,CAACzvB,CAAC,CFgCV,EAAEA,AEhCW,CAAC,CAAC,CFgCZ,CEhCc2jD,EFgCXriD,GFnFjB,AEmFkB,EAAEtB,CFnFjB,CImDkC,CFgChB,AEhCiBA,CJnDhC,AImDiC,GFgCd,AEhCiB,CFgChB,AEhCiB,CAAC,CFgCf,CEhCiB2jD,SAAS,CAAC3jD,CAAC,GAAG,CAAC,CAAC,CAAC;AJlD3F,IAAMgK,ACkDJkhH,AGCE,EDkCD,EClCOqwE,CHDR,CAAKpM,AEmCCh2J,EDDH,GCCQ,AClCI,CDkCHpO,CDDH,ACCI,CClCK,GFiCL3U,ACCI,CAAC,AClCI6iL,CFiCR,CCCO,CFnCD,CDlDM,AEoFT,CAAC,AEjCS,CHDJ,AGCKxkK,CJnDFrtB,AEoFNgP,EDlCM,ACkCL,CDlCM,CAAC,CCkCJ,CAAC,AEjCU,CJnDT,AImDUutC,CJnDV35C,AEoFCoM,EAAC,EAAG,EAAG,EEjCW,CAACpW,CAAC,GAAG,CAAC,CAAC,EAAE2jD,KJnD5B,GAAG,CImDkC,CAAC3jD,CJnDhC,AImDiC,GAAG,CAAC,CAAC,EAAE2jD,SAAS,CAAC3jD,CAAC,GAAG,CAAC,CAAC,CAAC;AJlD3F,IAAMiK,IGsFF8tL,MDDE,IAAM97J,EAAC,ECCK,CHtFO,AEqFTj8B,ACCGyvC,GHtFMroC,AEqFR,GAAGgP,EAAC,ACCM,CAACw/B,CHtFH,CAAA3rC,AEqFD,CAAC,ICCU,GAAG,CAAC,UHtFd,GAAG,GAAG;AAC/B,IAAMC,ACkDJ,AGCE,IDmCAguL,MDAExvI,IAAI,CAAEtyC,EAAC,CAAE,ACAG,CAACq5B,EDACinJ,MFtFa,AGsFN,CAAC9gJ,EHtFKxuC,EEsFF,GAAG60B,ACAC,EHtFF,AEsFE,CFtFF/xB,AGsFK,GDAI05C,ACAD,ODAQ,IAAIC,GAAG,GAAG,GAAG,IFtF7B,AEsFkCA,GFtF/B,AEsFkC,GFtF/B,AEsFoC8yI,cAAc,GAAG16J,EAAC,GAAK,EAAE,CAAE,IAAK2nB,OAAO,GAAG,GAAG,IAAKgzI,YAAY,GAAG36J,EAAC,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE;AFrF7J,IAAM9xB,ACkDJ+gH,AGCE,EDoCD,CAAC,CCpCMswE,CHDR,CAAKx2L,ECqCF,CCAK,CFrCC,GAAG,CGCM,GAAG,EJnDE,EImDEi0L,CJnDF7xL,IImDO,CAACqtB,EJnDR,CAAAtqB,IImDe,CAAC,CAAC,CACnC+rB,YJpDkB,AIoDN,CAAColK,EJpDQ,GAAG,EIoDJ,CAACjgL,GAAG,CAACggL,OAAO,CAAC,EAAEE,OAAO,CAAClgL,GAAG,CAACggL,OAAO,CAAC,CAAC,CACxDnhL,SAAS,CAAC,CAAC;AJpDlB,IAAM9P,ECiDU9C,EEuCZywL,EFvCgB,EAAE,UEuCJ,CFvCe,AEuCdtoJ,QHxFc,AGwFN,CAACmG,EHxFKxuC,KGwFE,EHxFF,CAAAgD,AGwFK,GAAG,wBHxFR,GAAG,GAAG;AACvC,IAAMC,AIqDF,EHL+B+kL,EAAE,AEwCjC8I,EFxCmC,ECuClC,EFvFW,GAAA9wL,ECgDgC,GEwC9B,CAACqoC,CHxFH,CAAAplC,MGwFW,CAACurC,GHxFZ,GAAG,CAAC,AGwFe,GAAG,CAAC;AHvFvC,IAAMtrC,AIqDF,EHN8C9C,AE0C/C,GCpCM,EHN8C,CCwClDigB,CDxCoD,AGM5CwU,CAAC,CJrDG,EIqDA,CJrDA70B,AEuFN,AElCO,EAAE60B,CAAC,CFkCN,EElCS4oJ,CJrDP,AC+CoD,CD/CpDv6K,AEuFE,GAAGo+C,CElCQ,CAACrkD,EFkCL,CAAC4iF,GFvFV,AIqDoB,CFkCN,CAAE,AElCMhrD,CJrDnB,AIqDoB,CJrDnB,CEuFgB,AElCK,CFkCJ,CElCM,EFkCH,IAAI;AFtF7C,IAAM1xB,EC8CiE8kL,AGOjE,IFmCF,AEnCQoM,EHPiE,CD9C9D,CC8CgE,ED9ChEr0L,IIqDO,GJrDP,AIqDUiO,CJrDV9K,GIqDc,CAAC2M,GAAG,CACzBskL,CJtDO,GAAG,CAAC,KIsDD,CAACn/K,GAAG,CACZ,IAAI48K,KAAK,CAACxkK,OAAO,CAACpf,IAAI,CAACwD,GAAG,CAAEojB,CAAC,GAAG5mB,IAAI,CAACC,EAAE,GAAI,CAAC,CAAC,EAAED,IAAI,CAACyD,GAAG,CAAEmjB,CAAC,GAAG5mB,IAAI,CAACC,EAAE,GAAI,CAAC,CAAC,EAAE,CAAC,CAC/E,CACF,CAAC;AJxDP,IAAM9K,AC6CqF,CAAC,CE4CzF,EDAA,UFzFiB,GAAApD,OAAA,CAAAoD,cAAA,GAAG,CAAC;AACxB,IAAMC,EIyDA,QJzDU,GAAArD,OAAA,CAAAqD,UAAA,GAAG,CAAC;AACpB,IAAMC,AC6CJ,EE4CC,AChCG,EFgCH,ECAM4L,AChCCmlL,CDgCA,GAAG1wE,MChCO,CJzDG,GAAA3jH,AGyFA,AChCCq3G,CDgCA25E,MHzFD,CAAA1tL,CIyDU,EAAE,CDgCA,GAAG8rI,GAAG,OHzFlB,GAAG,CAAC;AAC3B,IAAM7rI,AC6CJugH,EE6CCngE,EDDA2rI,AEhCK,CHZN,CAAKpH,EGYO7/I,EDiCH,CAAC0zD,CH1FM,GAAA/7F,AEyFJ,CEhCQ,EHZH,CC4CD0vL,AEhCO,EHZH,AE6CA,CH1FJ,AG0FK,CH1FLnsL,AG0FM,ACjCKsuL,IFgCH,CEhCQ,CAACnlG,MJzDjB,GAAG,CAAC,UIyDiC,CAAC;AJxDxD,IAAMlpF,EC4CkBtD,AE+CrByjD,EDFA4rI,ED7CyB,AGalBxyK,EHboB9c,EE+CnB,CAACg5F,AClCG,EJzDI,AIyDFwkF,GJzDEz9K,EEyFF,CEhCM,CHbY,AGaXg0L,CHbY3zL,CC6CfuvL,ACEE,CH3FJ,AG2FM5pK,CH3FNxiB,GC4CuB,GGaR,CDkCA,AClCC,CDkCA,CDFH,IFzFb,GAAG,CAAC;AACvB,IAAMC,EC2CsCtD,AEgDzCwjD,EDFA6rI,EEhCOr+I,EHdwC,EAAElxC,AEgDzC,CAAC4mH,IClCO,CFgCJ,CFzFQ,AIyDF,GJzDE7mH,AEyFJ2vL,AEhCK,EHdiC,AEgDlC,CFhDmCrvL,AEgDjC4O,CAAC,EAAE,CH3FL,AG2FM,CH3FNzL,AC2CwC,CC8CnC,ACEG2rI,GAAG,EAAEA,GAAI,CAAC,OH3FlB,GAAG,CAAC;AAC3B,IAAM1rI,EC0C2DtD,ACgD/D,ACECujD,ICnCOvS,CHf4D,EAAEnxC,CEkD7D,CAACupD,CH5FM,GAAAxpD,AIyDC,EDmCD,ACnCG,CDmCD,ECnCI,CHfqD,CD1C3D,AC0C4DO,AEkDtD,CH5FNmD,CG4FQ4sL,WH5FR,AG4FoB,CAAC,EH5FlB,CAAC;AACtB,IAAM3sL,ACyC4E,CAAC,CCkDjF,ACECggD,ICpCOrV,IDoCC,ACpCG,CFkCHwhJ,ACECjpE,CH7FM,AIyDFgrE,GJzDE7xL,EIyDG,CAACoB,EFkCF0uL,CAAE1kI,CF3FJ,AG6FK,CH7FLznD,AG6FOqiB,EDFC,EAAG,ICEI,CAAC9W,CAAC,EH7FjB,AG6FmB8W,GH7FhB,CAAC,IG6FuB,CAAC3rB,CAAC,EAAE2rB,QAAQ,CAACrC,CAAC,EAAEqC,QAAQ,CAACpC,CAAE,CAAC;AH5FzE,IAAMhgB,AG8FJ,CAAC,GDFA,AEnCK,CAAC,CAAC,EFmCH8rL,KF5FY,GAAA1vL,AE4FJ,GAAG,CAAC,GF5FA,CAAA4D,aAAA,GAAG,CAAC;AACvB,IAAMC,ACyCJ,AEsDA,IDFC,ACEKotL,ACtCAnsJ,IFoCC1S,KEpCQ,CAACx1B,EFoCD,CF7FM,CG+FD,ACtCA,CFoCFwuD,AEpCG/iB,CJzDAroC,CG+FE,EDFD,CAACoyB,CCEI/E,EH/FN,AIyDQ,CJzDRxpB,AIyDS,IFoCC,OCEG,CAAC,CAAC,IH/Ff,GAAG,CAAC;AAC3B,IAAMC,ACyCJggH,AEsDA,IDFC,ACEKotE,ACtCA8C,CHhBN,CAAK7L,ECoDEruL,IAAI,CDpDC,CGgBI,CFoCFsxD,CDpDC,CGgBI,CAAC4oI,CJzDG,AE6FL,CAACl6L,ACEG,EH/FCkG,CG+FE,CDFF,GCEMyoB,CCtCC,CJzDP,CAAA3kB,CIyDU,CAAC,IAAI25K,MAAM,CAACxgL,CDsCN,CAAC,CAAC,GH/FlB,AIyD4B,GJzDzB,CAAC;AAC7B,IAAM8G,AGgGJ,EFxDiBy9F,EEwDXsxC,ACvCA,CHjBc,CEwDZ,CFxDctyI,EEwDX,IAAIioB,IHhGM,ECwCM,CDxCNzoB,ACwCOK,MAAM,CDxCb,CAAA0D,EGgGI,CAAC,CAAC,aHhGN,GAAG,CAAC;AAC3B,IAAMC,AGgGJ,EFzDoCokL,AGkBhC,EFoCH,ACGKr1C,CFzDiC,CEyD/B,CFzDiCvyI,EEyD9B,IAAIioB,MFzD+B,CAAChoB,CDvCtB,GAAAT,MGgGA,CHhGA,AGgGC,CHhGDgE,AGgGE,qBHhGF,GAAG,CAAC;AAC/B,IAAMC,ACsCqD,AE0DzD,ACvCE,CHnBwD,GCuDzD,ACGK+hB,IDHCg8B,ICGO,GAAG,CDHF,CF7FM,EE6FH5vB,ACGG3O,CHhGAzjB,OAAA,AE6FK,CF7FLiE,AE6FMquB,KCGC,CAAC,CAAC,KDHS,CAAE,IF7FpB,GAAG,CAAC,EE6F2B,CAAC;AF5FvD,EIyDE,EJzDIpuB,AGgGJ,IAAI4rB,MAAM,GAAG,CAAC,EHhGM,GAAA9vB,OAAA,CAAAkE,gBAAA,GAAG,UAAU;AACnC,EI0DE4kD,EJ1DI3kD,ACsCJ,AE2DA2/G,GCvCK,CFmCJ,AEnCKjwG,CDuCN,CAAKs9K,CCvCI,CAAC,IAAIU,IJ1DM,CGiGJ,ACvCG,CAAC3xI,CJ1DAlgD,CGiGD,ECvCK,CAACoyB,GJ1DL,CAAAjuB,GGiGUyJ,CCvCG,EAAEk3B,EDuCA,EAAG,KCvCM,CJ1DxB,AI0DyB,CAAC,EJ1DvB,UAAU;AAEnC,EI0DE,EJ1DI1gC,ACqCJ0/G,EE4DC,ACvCGwwE,EFkCHj0K,CDvDD,CAAKgoK,AE4DC,ACvCE,GJ1DK,AI0DF,CFkCJ,ACKG,CAAC6H,CHjGElwL,CCqCD,AGqBG6xL,CFkCJ,EDvDI/tE,ECuDA,AElCK,CJ1DP,AI0DQupB,CJ1DRjpI,AGiGO,CF5DL,ACuDGgnD,CDvDEtsD,GCuDE,ACKG,CDLFzB,EDvDG,CDrCb,ACqCcsW,AE4DE,CDLF,CCKK,CHjGhB,AI0DkB,CFkCJ,AElCK22C,CHrBH,CDrCb,ACqCc,CAAC,CCuDA,AElCK,CDuCA,ACvCCl4B,KDuCI,GCvCI,CAAC;AJzDnD,EI2DE,EJ3DI/tB,ACqCJy/G,EE6DC,ACvCGywE,EFkCH,CDxDD,CAAKjM,AE6DEmE,EDLDzqI,ECKK,GAAG2hE,CCvCE,CHtBF,CCwDA,CElCK,CHtBFG,GDrCQ,AE6FNlkH,AElCIiyL,EHtBN,AE6DO,CHlGC7xL,ACqCHwxB,AE6DGk7J,ECvCG,CAAC7/F,GHtBD,ACwDA,CF7FH,ACqCI/vD,CDrCJz4B,AE6FM,ODxDM,CAACsP,IGsBQ,CHtBH,AE6DG,ACvCC,CHtBH,AE6DG,CF7DF,AE6DG,MHlGvB,GAAG,GAAG;AACjC,IAAMrP,ACqCJw/G,AGqBiD/mG,EDwChD,GF7DD,AGqBsD,CHrBjDwrK,ACyDH,ACIKnhI,CCxCiD,IHrB9C,ACyDF,ECIM,CF7DD08D,CCyDDlrH,CAAC,ACII6zL,GF7DJ,ACyDG,CDzDEj7J,ACyDD,ACII,CHlGI,AGkGHmM,CDJHzjC,CAAC,CF9FK8F,CGkGC,CF7DF,ACyDDgiD,CDzDEkE,EE6DMy9D,EHlGN,ACqCI,CDrCJr/G,EE8FM,CAAC+jB,ICIS,CDJJ,ACIK2oK,EDJHp4L,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,CCIM,CDJH,CF9FzB,CE8F2B82L,ACIItgD,EHlG5B,CGkG+B,CAAE,CHlG9B,GE8F6B,EAAG,EAAG;AF7FpE,EIyDmE,CAAC,CJzD9D7qI,AIyD+D,EDyClE,IAAM8iD,EDHJuvC,KCGW,CDHL,CAAClgF,CCGO+1K,IAAI,CAAC5uJ,GAAG,IAAK8lF,IHlGM,EE+FP,CF/FO3jH,AE+FLgiD,GCGS,CAACovI,GHlGL,CAAA7sL,AE+FG,EAAE3L,CAAE,CAAC,ICGS,GAAGw2I,GAAG,CAAE,iBHlGzB,GAAG,GAAG;AAC5C,EIyDE,EJzDI5qI,ACqCJ,EE6DC4lL,ACzCGp1I,KDyCE,CAAC9lC,CAAC,ECzCK,CDyCA,CAAEtB,CCzCC,IDyCI,ACzCAikL,CDyCClF,ICzCI,CAAC9xD,EDyCE,GAAGzzE,GHlGK,GAAApnD,CGkGE,ACzCA,CAACs0L,IDyCM7H,ACzCF,CJzDP,CAAAjoL,AIyDS+vL,EDyCI,CAAC32J,KAAK,GAAGwpB,CCzCD,CAAC,KDyCO,CAAE,GAAK,CAAC,GAAG,CAAC,KHlGzC,GAAG,GAAG;AAC5C,EIyDE,EJzDI3iD,ACqCJq/G,EE6DCsmE,GF7DD,CAAK5B,CE6DC,CDHH,ACGInuL,CAAC,GAAG,EAAI,CAAEuT,KAAK,CAACg/K,EHlGI,GAAA5sL,ACqCF,EE6DK,CF7DF,EE6DKqnD,EHlGN,ACqCK,CDrCL5iD,IGkGa,KAAOgoL,IAAI,CAAC3uJ,MAAM,GHlG/B,AGkGkCupB,GHlG/B,GAAG,CGkGmC,CAAE,CAAE,GAAG,CAAC,GAAG,CAAC;AHjGlF,EIyDE,EJzDI3iD,EGmGHm8C,MDJE+1C,GCIO,CAACukF,EHnGO,AE+FT,CAACn3J,EF/FQhkB,OAAA,CAAA0E,AGmGM,CAAE0lL,CDJJ,CAAEh/H,GCIO,CDJH,CAACx8B,ACII0hK,MHnGf,GAAG,EE+FoB,ACII,CDJH,ACII,CHnGrB;AAC3B,IAAM3rL,ACqCJ,EE+DC,IAAMm8C,UAAU,GHpGM,AGoGHD,GHpGG7gD,MGoGM,CHpGN,AGoGOu7K,CHpGP52K,eGoGuB,CAAEyrL,GHpGzB,GAAG,IAAI,QGoGqC,CAAC;AHnGtE,EIyDE,EJzDIxrL,ACqCJ,EEgEC,AC5CK8tB,ID4CAouB,EDNH,KEtCc,GD4CD,AC5CIwJ,CD4CHrtD,GC5CO,CAACm1B,CJzDC,CGqGH,EHrGGpyB,CGqGA,CAAC,EAAG,AC5CG,CAAC0yB,EJzDR,CAAA9tB,QIyDmB,cJzDnB,GAAG,IAAI;AACnC,EIyDE,EJzDIC,ACqCJ,EGoBM2vL,ED6CJ,IDPCn0K,ACOK4gC,KHtGS,AIyDA,CFsCR,EF/FQjhD,AIyDG0yB,EFsCP,ECOO,EDPH,CF/FA,AGsGMouB,CHtGNj8C,CE+FG+xF,EEtCW,CAAC9nF,GFsCN,AEtCS,CFsCRI,AEtCSA,CFsCR,ACOK,AC7CI,CD6CF,CAAC,CDPL,ACOO,AC7CEwjB,CJzDvB,EE+FiB,CF/Fd,EE+FiBkkE,EF/Fb,GIyD2B,CFsCR,AEtCS/nF,CFsCRxU,CAAC,CEtCU,CAAC6U,CFsCR,AEtCS,GFsCN,GAAG0nF,MAAM,CAACjzE,CAAC,GAAG,IAAI;AF9FvE,EIyDE,EJzDI7e,EIyDE2vL,ED6CJ,EDNA,ECMMjjK,KC7CS,CD6CH,EC7CMkB,CD6CHuuB,SHtGa,CIyDC,CAACnyC,CJzDF9O,AGsGD,CAACwxB,CC7CK,CAACn3B,CAAC,GJzDP,AGsGM,AC7CIq4B,CJzDV5tB,UIyDqB,CAAC+J,GAAG,CAACxU,CAAC,UJzD3B,GAAG,IAAI;AACvC,EIyDE,EJzDI0K,ACqCJ++G,EGoBM4wE,EFwCL,ACMCrD,CFlEF,CAAK5I,MGoBW,GAAG/1J,IHpBD,GAAG,EEkEC,CAAElB,CHvGM,AIyDA,CAAC1iB,EJzDD9O,CIyDI,CD8CJ,AC9CK2jB,CAAC,CD8CJ,CFlEC,CGoBM+O,CJzDT,CAAA3tB,AGuGM,CAACgS,MAAO,CAAC,CC9CK,CAAClI,GAAG,CAAC8U,CAAC,WJzD1B,GAAG,IAAI;AACvC,EI0DE,EJ1DI3e,ECsCH,CGoBI,CFwCJ,ACMC,GC9COpM,CFwCHkB,ACMA,CFlEE4uL,AEkEDwH,AC9CG,GFwCA,AExCG,CAAC,EAAEt3L,EFwCD,AExCE,CHpBA,AEkED,CFlEEm3B,CGoBE,CD8CD,CFlEE,AGoBC,CFwCD,CExCGn3B,CJ1DK,AEkGL,ACMD,CC9CE,EJ1DIoH,AI0DF,EAAE,KJ1DA,CAAAgF,yBAAA,GAAG,IAAI;AACtC,IAAMC,ACuCJ,AGmBE,CHnBD,GEkEC,AC/CM0vL,EFyCNt0K,KCMO,CDND,AEzCQ,GD+CH,AC/CM,CFyCP,GEzCWwxK,CFyCP,IEzCY,CJ1DC,AI0DA72C,GJ1DAh7I,OAAA,CAAAiF,EI0Da,CAAC+iC,KAAK,CAAC,gBJ1DpB,GAAG,IAAI;AACtC,IAAM9iC,ACwCJ4+G,AGkBE6wE,EDgDD,CAAC,EFlEF,CAAKhM,AC4DH,EE1CQ,CDgDF,AChDG5xK,EF0CH,CFpGQ,GAAA/W,AEoGJ60B,AE1CK,CF0CJ,AE1CK,CAAC,EF0CH,CAAC,EFpGD,AEoGG36B,CFpGHgL,ACwCM,EC4DF,CD5DK,EC4DF88C,OFpGP,CEoGe,CAAC35B,CFpGb,ACwCkB,IDxCd,AEoGc,EAAEwM,CAAC,IAAI36B,GAAC,EAAE26B,CAAC,EAAG,EAAG;AFnGxD,IAAM1vB,AI0DF,EHjBD,EEkEC,ACjDMyvL,IF2CLv0K,CD5DKqoK,EEkEC,GDNA,ECMK,CCjDO,CHjBJ,AC4DF4G,CD5DG55K,CGiBM,IHjBD,AGiBKm8K,CJ1DC,GAAA7xL,CEqGH,AE3CO,CAACqtI,EF2CLx4G,CAAC,EFrGD,CAAA1vB,AEqGM,GAAG,IE3CS,CAACwvL,QAAQ,CAAC,QJ1D5B,GAAG,IAAI;AACtC,IAAMvvL,AC0CJ,AGgBEwvL,CHhBD,CEkEA,IDNC,OE5Ca,CAACv5K,SAAS,CAAC,CJ1DG,AI0DF,EAAE,CJ1DArb,AI0DC,EAAG,CAAC,CAAC,GJ1DN,AI0DSy0L,CJ1DTrvL,UI0DoB,GAAI,CAAC,GAAG4V,KAAK,GJ1DjC,AI0DoCpiB,EAAC,CJ1DlC,EI0DqC,EJ1DjC,CI0DoC,CAAC;AJzD3E,IAAMyM,AC2CJy+G,AEkEA,ACnDE8wE,CDmDD,IFlED,CAAKhM,AC4DHvoK,MAAM,CE7CO,CAACiiB,EF6CJ,CD5DI,GAAG,AC4DH,CE7CO,CAACuvJ,EJ1DI,GAAA7xL,AI0DC,CAACgT,IHfC,ED3CH,CAAA3N,EI0DW,CAACqL,QAAQ,CAAC,EAAE,CAAC,CAAC,QJ1DzB,GAAG,IAAI;AACrC,IAAMpL,AG8GJw+G,ACpDE,EHdD,EC4DA,AE9COz7E,CDoDR,CAAKjf,GFlEG,GEkEG,CFlEC,AGcI,CHdHoI,CEkEC,CCpDK,IHdA,AGcIqgK,CHdH/0J,GD5CQ,CG8GHnH,ACpDG,CAACk3D,CJ1DD7sF,EC4CA,CAAC4V,AEkEC,EAAG,EH9GL,CAAAtQ,KC4CW,CAAE,EGcK,CAAC,CHdF,CAACxG,MAAO,CAAC,MD5C1B,GAAG,IAAI;AACrC,IAAMyG,AC6CJ,CAAC,CEkEA,ACrDGwX,EF+CH,ECMMqN,CCrDE,CF+CHtwB,CE/CK,CDqDA,EDND,CCMI67B,GH/GM,CEyGL,AE/CI,CDqDA,CH/GC31B,EG+GE+wL,KH/GF,CAAAxrL,EG+GU,EDND,EAAG,UFzGZ,GAAG,IAAI;AAC7B,IAAMC,AC8CJs+G,EGYIx1E,GHZJ,CAAKu6I,AC4DH,AEhDM,EJ1DI,AI0DFgJ,GJ1DE7xL,AE0GJ,EEhDO,CAACqB,CFgDJwzB,GF1GA,AE0GC,CF1GDrvB,EE0GI,CAAC,CD5DK,CC4DH00F,AEhDO,CFgDN,CD5DK,CD9Cb,CE0GWrlE,EF1GR,CE0GS,GF1GL,AE0GQ,CAAC,CD5DQ8uF,CC4DNzpH,GAAC,GAAG8nD,GD5DY,EAAG,GC4DP,CAAC35B,KAAK,EAAEwM,GAAC,GAAG36B,GAAC,EAAE26B,GAAC,IAAI,CAAC,EAAEqlE,CAAC,GAAGrlE,GAAC,GAAG,CAAC,EAAG;AFzG/E,IAAMpvB,EC+CHk+G,AEgEA,ACrDGl1E,MFiDDpuB,CF3GU,GAAArgB,AC+CF,CAACiN,AGWG,CFiDN,CEjDQ,GFiDJ,CF3GA,CAAAxH,EE2GI,IAAK6pL,GF3GT,AC+Ce,CAAE,ED/Cd,IAAI,CE2Ga,ED5DM,CC4DHz6J,CD5DKi0J,EC4DJ,CAAE,GAAG,GD5DS,AC4DN,CD5DO,GC4DFwG,WAAW,GAAGp1F,CAAC,CAAE,GAAG,IAAI;AF1G5E,IAAMx0F,AI0DF,CAAC,CHXF,AGWG,IHXC,AC6DH,CD7DI8iL,UD/Ce,GAAAxoL,OAAA,AC+CK,CD/CL0F,EC+CQi+G,UAAU,KD/ClB,GAAG,IAAI;AAC9B,IAAMh+G,ACgDJ,AGUEmjD,CHVD,CE+DAgqF,EDFA,ACEE,CAAC3oH,ACrDG,CAACtW,CJ1DG,EI0DA,CJ1DA7T,AI0DC,IAAI6xL,GJ1DL,CAAAlsL,AG+GM,CAAEotI,ACrDE,CAAClY,CDqDD,EAAEzwG,EH/GZ,EG+GiB,CH/Gd,AG+Ge,IH/GX,AI0DgB,CAACwqK,aAAa,EAAEvsJ,SAAQ,CAAC,CAAC;AJzD9D,EI0DE,EJ1DIziC,ACiDJk+G,EE8DCv1F,GF9DD,CAAKw6J,EE8DE,CAACjsJ,MH/GW,EG+GH,CH/GG98B,AG+GFmS,GAAG,CAAE,CAAC,EH/GJ,AG+GM,CH/GNvM,AG+GO,CF9DA,CE8DE,CAAE,CF9DD,AE8DE,CAAC8nB,UH/Gb,CCiDsB,EDjDnB,EG+GyB,CAAEolH,CH/GvB,CG+G0B,CAAC,CAACz+H,cAAc,CAAEyb,MAAO,CAAC,CAACjc,GAAG,CAAE,IAAI,CAACkD,MAAO,CAAC;AH9GnG,IAAMlR,ECkDH,EC2DA,ED3DI,CAAC2iL,EDlDO,GAAAxoL,OAAA,CAAA6F,OCkDa,CAAC0H,CDlDd,GAAG,IAAI,WCkD0B,CAAE,SAAS,EAAEu7K,SAAU,CAAC;ADjDxE,EI0DE,EJ1DIhjL,ECkDH,AE6DA,EDFAwpL,ED3DI,CAAC9G,MDlDW,EE6GL,CF7GKxoL,GE6GD0vL,IF7GC,CAAA5pL,GCkDS,AC2DF,GD3DK,IAAI,GDlDhB,GAAG,IAAI;AAC1B,EI0DEstL,EJ1DIrtL,ACmDJ,CAAC,CC2DD,EEpDM,GAAG,IAAIiqL,UJ1DY,GAAAhwL,OAAA,CAAA+F,CI0DF,CAACwoB,MAAM,EAAEo1B,QAAQ,CAACggE,EJ1DhB,GAAG,IAAI,CI0DmB,CAAC;AJzDtD,EI0DEyvE,EJ1DIptL,ACoDJ89G,EC2DA,ACACv1F,ECrDK,CHNN,AGMO4kK,CHNFnK,EE2DE,CAAC//J,EDAC8mK,EErDM,EHND,CGMIoD,EHND,CE2DC,CAAChpK,CH/GM,CE+GL4lK,CAAE5+J,CF/GGnxB,AI0DC,KFqDE,CD3DC,CDpDJ,AE+GM,CF/GNgG,CG+GO,CAAEkrL,gBAAgB,EAAE9mK,CH/G3B,GAAG,AG+G6B,CAAC,GH/G1B;AAClC,EI0DEgpK,EJ1DIntL,ECqDH87C,AE2DA,EDAA,AEtDK,CAACoxI,CDsDDrgD,CF3DA,CAACu1C,AC2DFqH,ACAG,CAACl6K,ICtDM,CAACuB,CHLF,CAACnD,AC2DF,ACAG,CAAEm/H,CHhHI,CEgHN,ACAK,CF3DF,AC2DF,ACAK,ACtDA,CJ1DA/yI,ACqDD+hD,EGKIoxI,EDsDE,CF3DD,AE2DE,CF3DDr0L,CDrDL,AGgHS,CHhHTmH,EI0DW,CAACnH,CHLA,CAAC,IGKK,SJ1DlB,GAAG,IAAI;AAC/B,EI0DE,EJ1DIoH,ECqDH67C,AGKK8yI,EFuDL,ACAC,CCvDO,EHLH,CAACvM,AC4DAl2J,ACAD,ACvDMrW,CDuDLm0K,EHjHQ,GAAAlwL,EEiHA,AEvDK,CHLJ,AGKKuxL,CHLJ39K,AE4DD,CDAEud,EFjHH,AGiHI,CHjHJjrB,ACqDM,CAAE67C,EC4DC,CAAC3vB,ACAD,EF5DI,CAACZ,CGKK,CAAC,EJ1DpB,CEiHkB,CD5DE,CDrDjB,ACqDkBsL,AGKI,CAAC,GJ1DnB,ICqDuB,CAAC;ADpDhD,EI0DE+3J,EJ1DI1uL,CI0DD,CHLF47C,AE6DA,ACxDGpe,EFwDH,AExDK,GHLA,AGKG,CHLF4kJ,AC6DAvmI,EFlHO,GAAAhiD,ACqDF,GAAG+hD,AC6DA,GAAG3vB,AExDG,CJ1DP,CAAAjsB,ACqDM,CAACqrB,KC6DK,CD7DC,AC6DAc,CD7DC4zB,EDrDd,ECqDkB,CDrDf,IAAI,EEkHkB,CAAE,UAAW,CAAC;AFjHvD,EI0DE2uI,EJ1DIzuL,ACsDJ,AE6DA,CF7DC,AE6DA,ACzDE,CAAC8V,EFwDH,GExDQ,CFwDFuhK,AExDG3gJ,MFwDG,CFlHM,CI0DD,CFwDF1K,CFlHGpyB,CI0DE,MJ1DF,AEkHK,CFlHLoG,AEkHMksB,GExDM,SFwDM,CAAE,EFlHpB,GAAG,EEkHyB,CAAC,CFlHtB;AAC5B,EI0DEuiK,EJ1DIxuL,ACuDJy9G,AE6DAA,CC1DG,CAAC5nG,EFyDHmE,CD5DD,AE6DA,CF7DKtjB,AE6DAsmB,CC1DI,CAACua,EFyDH,CD5DG,EE6DE,AC1DG,CHHF,AC4DF,ECCI,AC1DG,CAAC,CFyDJ,EFnHS,CEmHNzM,EFnHMnxB,GCuDC,CC4DD,CAAC3C,ACCE,EHpHH,CAAAgJ,CEmHK,GAAG,IAAI,YFnHZ,GAAG,IAAI;AACjC,EI0DEwuL,EJ1DIvuL,CI0DD,CHFFy7C,AE6DA3vB,AC3DGlW,EF0DH,GD5DK,AGEG,CHFFpd,AC4DDkjD,AE1DIlkB,ED2DD,CHrHM,AGqHLza,GHrHKrjB,ACwDF,AGEG,CHFF4T,CC4DA,CE1DK,CD2DF,AC3DG,CHFF,AE6DA,CF7DEmuC,AE6DD,CHrHJ,AEoHIniD,CFpHJ0G,GCwDU,CAAC+hL,IC4DE,EAAG,CFpHhB,ACwDmB,CAAC,EDxDjB,IAAI;AACxB,EI0DEwM,EJ1DItuL,CI0DD,CHFFw7C,AE8DA9pC,AC5DGiE,IF2DF,CD7DI,AE8DA,AC5DG,CHFFsV,AE8DA6W,AC5DGrpB,GF2DF,GD7DK,AGEG,CHFF8d,AC6DFlkC,CAAC,ACCE,CAACyqB,AC5DG,CJ1DG,CEqHN,CAAC,CFrHKrjB,CEqHH9F,CD7DG,AC6DF,CD7DG0Z,AE8DA,AC5DG,CD4DF,CDDDouC,ACCE,EHtHH,ACwDK,CDxDLz7C,ACwDOw7C,KAAK,AC6DH,CD7DIumI,AC6DHjgK,KAAK,EAAEzvB,CAAC,CD7DK,CAAC,CC6DHsB,CFrHrB,AEqHsB,EAAEtB,CFrHrB,AEqHsB,EAAG,EFrHrB,AEqHuB82L,QAAQ,EAAG,EAAG;AFpHpE,EI0DEmF,EJ1DIruL,CI0DD,CHFFu7C,AE8DA7pC,AC5DGgE,KHFE,AE8DA,AC5DG,CHFFsV,AC8DJolE,ACAIvuD,AC5DGtpB,CJ1DG,GAAA/e,CI0DE,CHFF,AC8DJ,CD9DKkmD,AC8DJxvC,CCAK,AC5DG,CD4DF2M,EHtHH,ACwDK,CDxDL7c,ECwDQu7C,CGEI,CD4DF,CAAC,CAAC,CF9DC,CAACwmI,CDxDd,GAAG,CCwDgB,CC8DH,CAAEvmI,CFtHX,OEsHmB,EAAEppD,CAAE,CAAC;AFrH9C,IAAM6N,ECyDHs7C,AE6DA5pC,KF7DK,AE6DA,CF7DCqZ,AC6DJolE,ACAIvuD,MF7DM,AC6DJ,CD7DKke,AC6DJviC,CFtHU,AGsHL,CAACX,EHtHIrjB,KGsHG,CAAC,CHtHJ,AGsHK,CHtHLyG,AEsHE,CAAE0qB,MAAM,CAACvC,ED7DK,CAAC,CAAC,IDzDlB,GAAG,AEsHoB,CAAC,GFtHjB;AAC7B,EI0DE,EJ1DIloB,ECyDHq7C,AE8DAyuI,KF9DK,CDzDM,ACyDL7iL,AC8DJ0S,GFvHSrgB,GEuHH,ECAM,CAACqoC,CHvHJ,AEuHC,CFvHD3hC,ECyDQ,CAAEw/K,AC8DL,GAAGtvF,ACAI,CAAC3wD,CHvHb,EGuHgB,CHvHb,AGuHc5iB,CDAH,CAACnU,CAAC,CFvHT,ACyDgB,CAAC,CC8DL,CCAK,CAAC,CDAH,ACAI,GDAD0nF,MAAM,CAACv8F,CAAC,GAAG,GAAG,GAAGu8F,MAAM,CAACjzE,CAAC;AFtHhE,IAAMhd,EC0DHo7C,AE6DA2uI,KF7DK,CAACtnK,AC8DJ,IAAKq0J,ED9DK,CD1DM,AC0DL,CAAC,AE6DA,CAACp1I,CHvHGroC,AEwHL,KAAKJ,EFxHA,AGuHK,CHvHL+G,AGuHMs/B,GAAG,CAAC5iB,EDCD,EAAG,GCDK,CAAC,CAAC,EHvHnB,GAAG,IAAI;AAC5B,EI0DEwxK,EJ1DIjuL,CI0DD,CHCFs7D,AE4DAyuH,AC7DG1jL,KHCE,GAAGg8K,AC8DLlsK,KD9DU,AC8DL,CD9DMkvF,AC8DLv1F,ACFK,CHvHM,AGuHL2xB,CC7DI,CAAC,CJ1DAroC,AC2DF,KE4DK,CAACimC,CHvHJ,CAAAr/B,CGuHO,CAACyc,AC7DG,EAAE,GF+DL,CAAEo6J,CCFK,CAAC,CAAC,GDED,AE/DF7vK,EF+DIhV,CFzHlB,AEyHoB,CAAC,CAACskB,AE/DH,CJ1DhB,IAAI,cEyHkC,CAAC,CAAC;AFvHlE,IAAMrW,AC2DJ,AGHwC,CHGvC,CE2DA+pL,KC9D4CwC,GFiEzC/yK,GEjE+C,CAAC8wK,EFiE1C,ACHK,CAAC9oJ,GHtHQ,AEyHV,GFzHUroC,AEyHP,ECHO,AC9DuC,CFiE3C+c,ACHKkpB,AC9DuCr4B,GD8DpC,CHtHJ,AGsHKyV,CHtHLxc,AEyHC,AEjE4C,CFiE3CzO,AEjE4C,CFiE3C,GAAG,CCHM,CAAC,CDGJ,ACHK,GDGF2kB,KAAK,CAACliB,CAAC,EFzHnB,CEyHsB,EFzHnB,CEyHsB,GAAGkiB,CFzHpB,IEyHyB,CAACxL,CAAC;AFxH7D,EIuDwE,EJvDlEzK,AIuDmE,ED+DtE+pL,MDIE,QCJY,CAACxoJ,IHtHS,GAAAroC,CGsHD,CAACimC,GAAG,CAAC5iB,CHtHJ,CAAAvc,KGsHW,CAAC,CAAC,cHtHb,GAAG,KAAK;AACnC,EIuDE,EJvDIC,AC2DJ,EE2DC+pL,MDKEzwK,MAAM,ECLM,CAACgoB,CDKH,GF3HY,CE2HR,EF3HQroC,CGsHD,CAACimC,GAAG,CAAC5iB,CHtHJ,CAAAtc,KGsHW,CAAC,CAAC,cHtHb,GAAG,KAAK;AACnC,IAAMC,AC2DJ88G,EE4DC0sE,GF5DD,CAAKpnK,ACiEH,MDjES,GAAG,CE4DC,CAACif,IHvHS,GAAAroC,CGuHD,CAACqjB,CF5DC,ID3DD,CAAArc,CGuHO,CAAC,CAAC,kBHvHT,GAAG,KAAK;AACnC,EIuDE,EJvDIC,EC4DH,AE2DAypL,IF3DMl6K,ACiEL6J,CEtEOy0K,KHKI,ACiEL,EEtEQA,CHKA,AGLA,CFsEJ,ACNG,CAACzsJ,AChEG,EHKChb,CCiEJ,GF7HW,EGuHH,CHvHGrtB,AGuHFqjB,OHvHE,AC4DA,AE2DK,CHvHLpc,AC4DC,AE2DK,CF3DJ,AE2DK,sBHvHP,GAAG,KAAK;AACrC,IAAMC,AIuDF4mD,EDgED6iI,IDOC,KAAM,IAAI97J,CAAC,ACPE,CAACwT,EDOA,CAAC,CEvEM,CFuEJnuC,AEvEK46L,CJvDG,EE8HP,ACPI,CHvHG90L,AGuHFqjB,EDOF2+B,CEvEQ,CAAC,GJvDL,AGuHK,CHvHL96C,AGuHM,CAAC,CDOH,CAACmhB,KAAK,EAAEwM,CAAC,IAAI36B,GAAC,EAAE26B,CAAC,EF9HrB,AE8HwB,EAAG,CF9HxB,KAAK;AACrC,IAAM1tB,AIuDF,EHKD,AE2DAypL,EChEOj7J,IFwELtV,CExEU,GAAGgzK,EFwEP,ECRM,CAAChrJ,AChEK,CFwENinJ,AExEOjvB,MJvDM,CGuHJ,CAACh9I,AChEK,CJvDFrjB,AIuDG,CAAC,CFwEN,GAAG60B,CAAC,ACRE,CHvHJ,AGuHK,CHvHL1tB,AGuHM,CDQC,GAAG,oBF/HV,GAAG,KAAK;AACtC,IAAMC,AIwDF,EHID,AE2DAypL,EC/DKuC,EHIClK,ACoEL,IDpES,AGJC,CAACgH,EHIC,GE2DC,CF3DGznK,AE2DF4f,GC/DM,EAAE+qJ,EJxDI,CGuHJ,CAAC/vK,CHvHGrjB,CIwDE,CAACopB,ID+DC,CHvHJ,AC4DA,AE2DK,CHvHLhiB,AC4DC,AE2DK,AC/DG,CHIP,AGJQuuB,CHIP5L,IGJY,CAAC,aHIK,CAAEyH,GD5DvB,GAAG,AC4D0B,CAAC0J,EAAE,ED5DxB,AC4D0B,IAAI7N,cAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;AD3DxF,IAAMhmB,AIyDFs8C,EHGD,AE2DAmtI,IF3DM3H,ACqEL9oK,EExEQ,CAACwmG,GFwEH,GFjIW,CEiIP,ACVG,CF3DG,AE2DFx+E,CHvHGroC,EC4DEkpL,ACqEL,AExEM,CAAC,CAAC,EHGC,AGHC,CJzDP,AC4DOv1K,AE2DF,AC9DG,CJzDRtM,AGuHMgc,CC9DIs7I,GHGE,CAAC,CAAC,CAAC9kJ,AE2DF,AC9DG,CD8DF,AC9DGy5K,CD8DF,IF3DM,CAAC,CD5DtB,AC4DuB,GD5DpB,AIyDwB,EAAE30B,GJzDrB,GIyD2B,CAAC40B,WAAW,CAAC;AJxDrE,IAAMjsL,AGwHJ,AC/DEq8C,CD+DD,CF3DA,ECqEA,EDrEMylI,EGJG,CAACliE,MJzDQ,GAAAlnH,AC6DA,CGJE,CAAC,CHIA,AGJC,EAAE,CAAC,CJzDP,AC6DOqtB,CD7DP/lB,AIyDSq3J,MAAM,CAAC20B,MHIF,CAAC,CD7Df,AC6DgB,EGJU,CJzDvB,CIyDyB30B,IJzDpB,EIyD0B,CAAC40B,WAAW,CAAC;AJxDpE,IAAMhsL,AGyHJ,AChEEo8C,EHID,IAAM0lI,EGJG,CDgEDgI,AChEE74F,WJzDa,AC6DH,GD7DGx4F,AC6DA,AGJC,CAAC,GHIEyoB,CGJE,CDgED4oK,AChEE,CJzDP,AGyHO7/J,CHzHPjqB,KGyHa,EAAE+pL,MF5DD,CAAC,CAAC,EE4DS,EAAG,CHzH5B,GAAG,KAAK;AAClC,IAAM9pL,AI0DFm8C,EHGD,AE6DA,EDQA,EDrEM2lI,EGHG,CAAChmJ,CDgED9R,IChEM,CAAC,CDgED,AChEE,CDgED/O,GH1HO,GAAAziB,CC6DC,CE6DA,CAAClG,CF7DE,GD7DJ,AG0HM,CH1HN0N,AC6DQ6lB,cAAO,CAAC,CAAC,ID7DjB,GAAG,KAAK;AAClC,IAAM5lB,AI2DFk8C,EHGD,ECoEA2rI,ACPC,EF7DK/F,EGHG,CDgEH,AChEI//H,EHGC,GAAG,CAAC,ACoEJ,ACPC,AChEI,CAACV,EHGC76C,CCoEHyhL,CFlIQ,CI2DD,CHGA,CD9DC1vL,AC8DAkO,AGHCqgB,EHGC,ECoEF,EEvEO,CJ3DP,AI2DQ,CJ3DR9mB,oBAAA,GAAG,KAAK;AAClC,IAAMC,AI2DF0rL,EHID,ACoED,ICRGnC,AChEK,CAACznI,EHID,IGJO,CAAC7F,IHICv6B,ED/DO,AG2HP,CAACjX,CChEM,CJ3DAnS,AI2DC,CHIFopB,AE4DF,CF5DIyrJ,AE4DF,CAAC,EAAE,CAAC,CH3HH,CAAAntK,AG2HK,CAAE,CAAC,CF5DE,GAAG,IAAI,EAAG,QD/DpB,GAAG,KAAK;AAClC,EI2DE,EJ3DIC,EEoIJ6pB,EDpEE,EE2DC0/J,EF3DKp0J,ACoEF,CAACwH,ODpES,CCoED,CAAE,CDpEEyd,CDhEK,EG2HL,CH3HK/hD,AG2HJkpB,CF3DI,CAACsI,GCoEGsS,EFpIJ,CAAAn8B,ACgEO,CAACm1B,CCoEC,EAAG,ACTJ,CAAE,IF3DM,AE2DFwB,WH3Hd,CG2HmB,CAAE,CH3HlB,AG2HmB,EAAErwB,GH3HhB,CG2HoB,CAACC,EAAE,GAAG,GAAG,EAAE,CAAE,CAAE,CAAC;AH1HtE,EI4DE4mL,EJ5DIltL,ICiEF4O,ACoED,CEzEM,CD+DJ,AC/DK,CAAC,CFyEHstB,EDpEE,CAAClwB,ECoEE,CAAC4e,CDpEC,CAAEsK,IDjES,AEqIN,GFrIM98B,CCiEA,CAAC,ACoEF,CDpEGiU,GAAG,ACoEF,CFrIH,ACiEO8tC,CDjEPn6C,AEqIM,IDpEM,CAAC9I,MAAO,CAAC,QDjErB,GAAG,KAAK;AAClC,AI4DA,IJ5DM+I,IG4HF,EDUA4nL,GCVK,MDUI,ACVE,CDUA3rJ,IFtIW,CEsIL,CAAC,CFtII9jC,OAAA,CAAA6H,oBAAA,GAAG,KAAK;AAClC,AI6DA,IJ7DMC,AI6DFitL,IHIA,ACsED,ECXE9D,IC/DS,GAAGl1K,OJ7DS,AG4HP,CAAC5J,AC/DK,CAAC6iL,CJ7DAh1L,CG4HH,CAAE,CAAC,EAAE,CAAC,CH5HH,CAAA8H,AG4HK,CAAE,CAAC,GC/DM,CAAC,UAAU,CAAC,GJ7D1B,GAAG,KAAK;AAClC,AI6DA,IJ7DMC,AI6DFktL,IHIAz+K,ACuED,ECZE06K,EDYGptJ,EDvEE,CAACpW,CGJK,CF2EH,CAACma,CE3EK9rB,KJ7DO,AEwIN,ECZC,CH5HK/b,AG4HJkpB,AC/DK,CAAC8rK,CF2EH,CDvEC,CAAE9L,ECuEC,CFxIH,CAAAnhL,ACiEO,ACuED,CDvEE,GE2DA,CAAE,EC/DM,CAAC,CD+DHu2B,UC/Dc,CJ7D5B,AI6D6B,CD+DV,CAAE,CH5HlB,AG4HoBrwB,IAAI,CH5HnB,AG4HoBC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;AH3HxE,AI6DA+mL,IJ7DMjtL,MEyIF8nL,ACbC,EC/DO,CAAC7iL,MF4EA,CAAE62B,KFzIY,AEyIN,CAAC,EFzIK9jC,CI6DE,CAC3B,KJ9DyB,CAAAgI,EI8DjB,EACR,UAAC9P,CAAC,EAAK,IJ/DkB,GAAG,KAAK;AACnC,EI+DI68L,EJ/DE9sL,ICiEF,ACyED,ACbC,IC9DU,CD8DL,AC9DM4W,GAAG,GD8DH,AC9DMq2K,GAAG,CAACC,EJ/DE,GAAAn1L,OAAA,CAAAiI,EI+Da,CAAC/P,CAAC,CAAC4G,MAAM,CAACmuJ,KAAK,CAAC,CAAC,CAAC,CJ/D/B,AI+DgC,GJ/D7B,KAAK;AACnC,AI+DE,CAAC,EACD,CJhEI/kJ,ICiEFwgL,AC0ED,AE1EH,CAAC,CD4DIuI,EDcGntJ,KD1EK,AC0EA,CD1EClF,AC0EAkJ,MCdK,CH7HQ,AG6HP31B,CDcE,EF3IKnS,AG6HJ,CAAE,CAAC,CDcC,CD1EC,AE4DA,CF5DEwW,AE4DD,EH7HF,AE2II,ACdA,CH7HJtO,AG6HM,CDcC,ACdA,EF5DG,CAAC,iBDjEX,GAAG,KAAK;AACnC,AIiEA6sL,IJjEM5sL,ICkEF,EC0EA4nL,ACfCmB,AC5DK,CAACkE,CHCFrzI,KAAK,AGDG,CHCF+lI,EGDK,CF2EL,CAAEhkJ,IF5IW,AG6HP,CDeE,ACfD5a,CF3DG,AC0ED,CF5IIlpB,GCkECkiE,AGDG,IJjEJ,CAAA/5D,ACkEM,EE2DA,CAAE,EF3DG8gL,EE2DC3qJ,GF3DI,CAAC2tE,IAAI,EAAG,EE2DP,CAAC,CAAE,CH7HpB,AG6HqB,GH7HlB,KAAK;AACpC,EIiEE,EJjEI7jG,IE6IH,ED1EEohL,AE0DA,UF1DU,CAAEC,KDnEW,GAAAzpL,OAAA,CAAAoI,ICmES,CAAEysK,SAAU,CAAE,CAAC,MDnExB,GAAG,KAAK;AACpC,EIiEE,EJjEIxsK,EE8IJ,AE7EIwW,CF6EF,CD1EA,AC0EC,AChBD,CC7DK,GAAGw2K,CD6DH,CC7DK,CAACC,ID6DA,EC7DM,CAACP,IJjEM,GAAA/0L,GIiEI,CAAC,GJjEL,CAAAqI,sBAAA,GAAG,KAAK;AACpC,EIkEE,EJlEIC,EE+IJ,AE7EI4jB,EHGF,CGHK,CD4DJ+kK,EFzDIlvI,AGHG,CF6EH1hC,GE7EOg1K,CHGF,CAAClO,AGHG,CF6EH,AE7EIoO,CJlEG,EIkEA,CJlEAv1L,AIkEC,CD4DJ,AC5DK,CD4DJmS,GAAG,CAAE,CH9HH,AG8HK,CH9HL7J,ACqEM,AEyDA,EFzDG,AEyDD,CAAC,EAAE,CAAE,CAAC,SH9Hd,GAAG,KAAK;AAC9B,EIkEE,EJlEIC,AEgJL,EE9EKitL,IHID9M,AEwDAwI,AC5DK,GAAG,IAAImE,EHIH,AGJK,CHIJ3/K,AGJK6/K,GAAG,CAAC,CHIJ,AGJK,CJlEG,AG8HP,CAACrsK,EH9HMlpB,ACsEJ0pL,ODtEI,CAAAnhL,EG8HM,CAAE,GFxDE,CAACmN,AEwDC4oB,KFxDI,GAAGyjB,IEwDF,CFxDO,AEwDL,CFxDMqlI,AEwDL,CH9HpB,CG8HsB,CAAEn5K,CH9HrB,GG8HyB,CAACC,CH9HrB,CG8HuB,GFxDO,AEwDJ,GAAG,EAAE,CAAE,CAAE,CAAC;AH7HxE,EE+IE,AE7EA,EJlEI1F,MCsEDkgL,AEwDA,SFxDS,CAAC34J,GAAG,IAAI25J,CDtEQ,GAAA1pL,OAAA,CAAAwI,ECsEM,CAACunB,GAAG,GAAGgyB,KAAK,CAACqlI,SDtEnB,GAAG,CCsE6B,IDtExB;AACtC,EE8IE,AE5EAiO,EJlEI5sL,AIkEF,CAACgtL,GHKD,AEwDA,CFxDC,ACuEHpG,ICfO,AC7DI,CAACxwK,CHKH,EGLM,ED6DF,AC7DI22K,CJlEG,AE8IpB,GF9IoBx1L,AIkEC,EAAEq1L,EAAE,CAACK,EJlEN,CAAAjtL,YIkEqB,EAAE,CAAC,CJlExB,AIkEyB,GJlEtB,KAAK;AAC9B,AE6IE,IF7IIC,MCwEDggL,AEuDAuI,SFvDS,CAACv7K,IEuDI,CFvDC,AEuDAvD,EH/HS,CG+HN,CFvDCu3K,AEuDC,CH/HI1pL,AG+HH,EAAE,CAAE,CAAC,EAAE,CH/HJ,AG+HM,CH/HN0I,AG+HO,KFvDE,CAACgN,KAAK,YDxEf,GAAG,KAAK;AACrC,EIkEE,EJlEI/M,MCwED+/K,AEuDAwI,SFvDS,CAACnhK,GAAG,GDxEU,AG+HP,CFvDC25J,AEuDAxgK,EH/HMlpB,OAAA,CAAA2I,EG+HM,CAAE,CFvDA,CAAConB,EEuDGuO,CFvDA,WEuDK,CAAErwB,EH/HnB,EG+HuB,CH/HpB,AG+HqBC,EAAE,GH/HlB,AG+HqB,GAAG,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;AH9HtE,EIkEEmnL,EJlEIzsL,AIkEF,CAACyuG,GHOD,EEsDC,IC7DS,CAACm+E,IAAI,EAAEtpK,GAAG,EAAE,GAAG,EAAE,EJlEI,CIkED,EJlEClsB,AIkECq1L,EAAE,CAACM,IJlEJ,CAAA/sL,YIkEqB,CAAC,gBJlEtB,GAAG,KAAK;AAC3C,IAAMC,IGgIF,IHhIU,CGgIL,EHhIK7I,IGgIC,GHhID,CAAA6I,QAAA,GAAG,IAAI;AACrB,EIkEE,EJlEIC,ICyEF,EEuDCmoL,IHhIW,GAAAjxL,OAAA,AGgIG,CHhIH8I,AGgIIqJ,GAAG,CAAE,CAAC,EAAE,CAAC,EHhIb,AGgIe,CAAE,CAAE,CHhIhB,AGgIiB,IHhIb;AACvB,EIkEE,EJlEIpJ,EIkEA6sL,ID8DD1E,MHhIa,CIkED,EJlEClxL,CIkEE,IAAIq1L,EJlEN,AGgIG,AC9DK,CJlERtsL,AGgIImgB,AC9DK2sK,SAAS,CAAC,CAAC,CJlEpB,AGgIgB,CAAE,EHhIf,EGgImBv3J,EHhIf,UGgIoB,CAAE,CAAC,EAAErwB,IAAI,CAACC,EAAE,EAAE,CAAE,CAAE,CAAC;AH/HhE,EIkEE,EJlEIlF,EIkEAyjJ,EHOF,EEuDC,EFvDG59I,GAAG,AGPI,GHODkzC,AGPI,IAAIszI,CJlEG,ACyEN,CAACpO,AGPI,CAACsO,CJlEAv1L,EIkEG,CAAC,CAAC,GJlEL,CAAAgJ,KCyEU,cDzEV,GAAG,IAAI;AAChC,EIkEEqsL,EJlEIpsL,AIkEF,CAAC6sL,GHOD,AEwDA,IFxDIhnL,GAAG,EGPM,CHOHizC,AGPI71B,GJlEK,AIkEF,EHOF,AGPI0pK,CJlEA51L,ACyEHknL,ODzEG,CAAAj+K,EIkEW,EAAEwjJ,GHOD,MGPU,EAAE4oC,EJlExB,AIkE0B,CAACU,EJlExB,IAAI,GIkE6B,EAAEV,EAAE,CAACW,mBAAmB,CAAC;AJjEpF,EIkEE,EJlEI9sL,IC0EF,EEuDCkJ,EFvDImrC,KEuDG,CAACpa,EFvDI,CD1EM,AC0EJt0B,EEuDD,CHjIK7O,AC0EA,AEuDH,CFvDI,IAAIu9C,ED1EL,CAAAr0C,KC0Ea,CAAE4F,GAAI,CAAC,EAAG,KD1EvB,EGiIyB,CHjItB,AGiIuB,IHjInB;AAC9B,IAAM3F,EGkIH,IFvDE,IAAK0F,GAAG,GAAG,CAAEZ,ED3EO,EC2EH,CD3EGjO,AC2EFkO,EAAE,EAAGW,GD3EH,AC2EM,CD3EN1F,GC2EUogL,KAAK,CAAC,KAAM,IAAK16K,CD3E3B,EC2E8B,CD3E3B,EC2E8BZ,ED3E1B,EC2E8B,CAACC,EAAE,EAAGW,GAAG,IAAI06K,KAAK;AD1EhF,EIkEE,EJlEIngL,EIkEE8pL,IHUH,IAAKpkL,AGVM,GHUH,AGVMmnL,EJlEE,CC4EL,CAAEhoL,CD5EGjO,GC4EC,CAACkO,EAAE,CD5EJ,CAAA9E,AC4EO0F,CGVK,CAAC8mL,CHUH,IAAIrM,KAAK,CAAC,AGVI,CAAC,CJlEzB,GAAG,AC4EuB,ID5EnB,AC4EwBz6K,GAAG,GAAGb,IAAI,CAACC,EAAE,EAAGY,GAAG,IAAIy6K,KAAK;AD3EhF,EIkEE,EJlEIlgL,EGkIH,IFrDE,IAAKwF,GAAG,GD7ES,CC6ELC,ED7EK9O,CC6EF,EAAG,ID7ED,CAAAqJ,gBAAA,GAAG,IAAI;AAC7B,EIkEEwV,EJlEIvV,CIkED,CAACsmD,MHYA84H,AGZM,CAAC,CAAC,OHYC,CAAChzK,KAAK,CD9ES,EC8ENzH,CD9EMjO,GC8EF,CAAC8O,GD9EC,AC8EE,CD9EFxF,AC8EIuF,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAE45K,KD9ExB,GAAG,CC8E8B,CAAChzK,ED9E3B,GC8EiC,CAAE,CAAC;AD7EzE,EIkEE+2I,EJlEIljJ,EGkIHumB,IFnDE,CAAC,AGbK,CDgEF,AChEG8/B,GDgEArhC,EFnDA,CGbM,CAAC,CAAC,CDgEF,CAACuO,QHlIa,AGkIL,CAAClnB,EHlII5V,OAAA,CAAAuJ,AGkIM,CAAE+nL,UAAW,CAAC,cHlIpB,GAAG,IAAI;AACvC,EIkEEkE,EJlEIhsL,EGkIHynL,AChEG,CAACrhI,KHcD84H,CGdO,CAAC,CAAC,KDgEE,CHlIM,ACgFR,AEkDGr0K,CFlDFqB,EDhFO1V,GCgFF,GAAK0oL,CDhFH,CAAAl/K,GGkIS,CAAEsmB,GFlDC,CAACpa,EEkDK,CAAC,CAAC7B,CFlDF,EEkDK,CFlDF,AEkDIy9K,CHlIzB,ACgFuBziL,GDhFpB,ACgFuB,CDhFtB,ECgFyBC,GAAG,AEkDI,CAAC,GFlDA,CAAC,GACtDb,IAAI,CAACa,GAAG,CAAED,GAAG,EAAE65K,SAAS,CAAChzK,KAAM,CAAC,GAChCzH,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAE45K,SAAS,CAAChzK,KAAM,CAAC;ADjFvC,EIkEEkgL,EJlEInsL,EGmIH4mL,IFhDE,CEgDG,CAACvzJ,CCjEI,CAAC8yB,MDiEG,ACjEG,CDiEFh8C,ACjEG,CAAC,GJlEK,AGmIL,CAAE09K,EHnIGtxL,OAAA,CAAAyJ,AGmIQ,CAAC,oBHnIT,GAAG,CAAC;AAC/B,EIkEE,EJlEIC,EGoIH2mL,EFhDC,GEgDI,CAAC75J,MAAM,CAAEjI,IHpIQ,EGoIF,CHpIEvuB,AGoID88B,OHpIC,CAAApzB,AGoIQ,CAAC,kBHpIT,GAAG,CAAC;AAC7B,MGoIGopI,EAAE,CAACl/H,IAAI,CAAEy8K,KAAK,CAACpnK,UAAW,CAAC;AHnI9B,EIkEEoiD,EJlEI1hE,EGqIH0mL,ACnEG,CAAC6C,CHkBH,GEiDI,CAAC18J,GCnEM,CAAC,EJlEI,AGqIL,CAAEy6J,EHrIGjxL,OAAA,CAAA2J,IGqIY,CAAC,SHrIb,GAAG,IAAI;AAC3B,AIkEA,CAAC,KDmEEopI,EFjDC21C,AEiDC,CAAC90K,IAAI,CAAEy8K,GFjDC,CAACtgK,CEiDG,CAAC9G,CFjDD,GAAGhb,IAAI,CAACa,CEiDI,CAAC,CFjDF,CAAEizC,KAAK,CAACglI,aAAa,EAAE94K,IAAI,CAACY,GAAG,CAAEkzC,KAAK,CAACilI,aAAa,EAAE0B,SAAS,CAAC34J,GAAI,CAAE,CAAC;ADnFnG,AIkEA,IJlEMnmB,AGsIJ,ACpEEssL,IHmBAxN,EGnBM,GAAG,GJlEK,CCqFL,CAAChN,CDrFI17K,OAAA,ACqFI,CDrFJ4J,ACqFK,CAAC,WDrFN,GAAG,IAAI;AACzB,EIkEE,EJlEIC,AGuIJ,SAAS0mL,QHvIY,GAAAvwL,IGuIGuwL,CAAExzK,EHvIL,CAAAlT,EGuIU,EAAG,aHvIb,GAAG,IAAI;AAC9B,EIkEEssL,EJlEIrsL,EGwIH,EFlDC,KEkDM,IAAI0rC,GHxIQ,EIkEA,CJlEAx1C,OAAA,CAAA8J,EIkEAqsL,QDsES,CAAE,KHxIX,GAAG,IAAI,AIkEP,EAAG;AJjEzB,IAAMpsL,AIkEFgS,IDqE+BgB,ICrEvB,CDqE4B,ACrE3Bi4K,EDqE6Bj4K,KAAK,KHvIpB,EIkEA,CJlEA/c,AIkEC,OJlED,CAAA+J,AIkES,CAAC,CAACqsL,SAAS,GAAG,OJlEvB,GAAG,CAAC,UIkEwC;AJjEvE,EIkEE,EJlEIpsL,ICsFF,AEgD6C2mC,IFhDxCoR,KAAK,CAAColI,AEgD4C,EAAE,IHtInC,GAAAnnL,ICsFE,GDtFF,CAAAgK,CCsFO,IAAI,EAAG,aDtFd,GAAG,CAAC;AImE9B,CAAC,KDmEkE,CAAE,CAAC,EF9CjE+3C,KAAK,CAACjjD,MAAM,CAACkV,eAAe,CAAE21K,SAAS,EAAE5nI,KAAK,CAACqlI,aAAc,CAAC;ADtFnE,AImEA,IDmEE,IF9CE,CAAC,AGrBI6O,MHqBE,QGrBYA,CAAC/C,QAAQ,EAAE;AJlElC,EImEE,EJnEIjpL,AGuIJ,ECpEIosL,IHsBDt0I,GE8CM0uI,EF9CD,CDzFQ,ACyFP3xL,EGtBO,CJnEAkB,EImEG,CHsBJ,CAAC6T,AGtBK,GJnEL,ACyFG,CDzFH5J,ACyFK0/K,GE8CK8G,CAAE1zK,KF9CG,AE8CE,CF9CD,CE8CG+0I,CHvInB,GAAG,AGuIoB,EHvIlB,CGuIqB,IAAI,EAAG;AHtInD,EIoEE,EJpEI5nJ,EGwIH,CCpEI,CHsBH,EE8CK+R,CCpEErjB,CAAC,GAAG,CDoEA,ACpEC,EJpEI,AIoEFA,CDoEAmjB,ACpEC,EJpEC/b,CIoEEkzL,KDoEI,CHxIN,AGwIO3B,CHxIPrnL,CIoEU,CAACmnB,IAAI,CAAC,CAAC,EAAEz4B,CAAC,CDoEA,CAAE,ACpEA,CJpEtB,CIoEwB,EJpErB,IGwI4B,CAAC,CHxIvB;AAC7B,IAAMuR,AIoEF,EDoED8R,ECpEK03H,IDoEC,CAAC50H,ECpEK,GDoEA,ACpEGm0K,GDoEA,EAAE,CHxIM,EIoEA,CJpEAlzL,AIoECoT,GAAG,CAACxa,CAAC,CAAC,CJpEP,CAAAuR,oBAAA,GAAG,aAAa;AAC1C,IAAMC,AIoEF,EDoED6R,EF9CC,AGtBIkV,IDoEC,CAACnS,CCpEI,GAAG,EDoED,ACpEG,GDoEA,CHxIM,CGwIJ,EHxIIhf,OAAA,CAAAoK,mBAAA,GAAG,YAAY;AACxC,IAAMC,AIqEF,EDoED,EF/CC03C,CGrBK,CDoEA9iC,GF/CA,AGrBI4V,CHqBH/1B,AGrBI,GDoEE,ACpEC,CAAC,EHqBF,AE+CGmd,ACpEC4Y,CHqBH5gB,AGrBI,GHqBD,AGrBI0/H,CHqBF5xF,CE+CG,CAAC7iC,EHzIK,CC0FJ,CAACunK,AGrBG,CJrEAzmL,AIqECs2L,KHqBG,AE+CC,CF/CA,AE+CE,CHzIP,AIqEQ,CJrERjsL,AIqESpN,EDoEG,CAAC,GCpEE,EAAE43B,CAAC,IAAI,CAAC,EAAE,SJrEzB,GAAG,mBAAmB;AAErD,IAAMvqB,EGwIH2U,ACpEGkS,EHqBF4wB,IGrBQ,CHqBH,AE+CC,ACpEGnlD,CHqBHkC,AE+CC0yL,GCpEM,CJpEG,AIoEF,EHqBF,CDzFIxxL,ACyFH6U,EE+CG,CAAC,CAAC,GHxIF,CAAAvK,GCyFQ,CAAEy3C,KAAK,CAAC8kI,IDzFhB,GAAG,QAAQ,ACyFoB,EAAE9kI,KAAK,CAAC+kI,eAAgB,CAAC;ADxF5E,IAAMv8K,EGwIH0U,EF/CC8iC,AGtBgB7yC,CAAC,EAAEykI,EHsBd,AE+CC,CF/CA70I,AE+CCspI,EHxIO,CGwIJ,CAAE,ACrEc,CJnEZpoI,AImEas2L,CHsBf,AE+CE,CF/CDziL,CE+CG,EF/CA,AE+CE,CF/CAkuC,CDzFJ,AGwIM,ACrEc,CJnEpBx3C,AImEqBsqB,CDqEb,ACrEc,CAAC,CHsBd,AE+CC,CF/CA4xJ,AE+CC,EAAE,CAAC,GF/CG,AE+CAx4K,CF/CC,CDzFlB,EGwIqB,CHxIlB,AGwImBC,EAAG,CAAC,GHxIjB;AAE3B,IAAM1D,EGuIHyU,ECtEwC5kB,CAAC,EAAEs5I,EDsEpC,CAACnN,ICtE0C,CJjEhC,AIiEiC8vD,GJjEjCt2L,CGuID,CAAC,CAAC,CCtEuC,CAAC60B,CAAC,CJjE1C,CAAArqB,CIiE6C,CAAC,aJjE9C,GAAG,QAAQ;AAChC,IAAMC,EGuIHwU,ACvEkE,CAAC,CHwBlE,AGxBmE,KDuE7D,CAACwyK,CHvIM,GAAAzxL,KGuIG,EHvIH,CAAAyK,AGuIMsS,KAAK,CAACswB,KHvIZ,GAAG,AGuIiB,CAAC,CAAC,EHvIf;AAExB,IAAM3iC,AI+DF,EDuEDuU,EF/CC,KE+CM,CAAC8zD,GHtIQ,CGsIJ,CAAC,CHtIG/yE,AGsIF,OHtIE,CAAA0K,aAAA,GAAG,CAAC;AACvB,IAAMC,AIgEF0rL,EDuED,EFhDC,EEgDIvkC,EFhDC/vG,EEgDG,ECvEI,CJhEG,ACuFL,AGvBGnlD,CHuBFirL,CEgDE,CHvIE7nL,CIgEE,CAACmxB,CDuED,EAAG,EHvIL,CAAAxmB,AIgES,CAAC,CHuBF,IAAIi/K,ODvFZ,GAAG,IAAI,GCuFsB,IAAI7nI,KAAK,CAACvwB,MAAM,CAACw7C,oBAAoB,EAAG;ADtFxF,EIgEE,EJhEIpiE,IGwIFqU,EFhDCypK,KEgDM,CAACgJ,GFhDE,CDxFQ,ACwFP5hK,AEgDC,GHxIM9vB,AGwIH,GFhDE,GAAG6pL,CDxFF,CAAAj/K,IGwIS,OFhDM,CAAE89K,IDxFjB,GAAG,ECwFuB,CAAC54J,CDxFpB,KCwF2B,CAAC;ADvFzD,EIiEE,EJjEIjlB,ICyFF,AE+CAoU,CF/CC,AGxBIo3K,MHwBE,AE+CA,CAAC1E,KCvES,CJjEG,GAAA3xL,AGwIH,GAAG,IHxIA,CAAA6K,GGwIQ,eHxIR,GAAG,IAAI;AAC/B,AIiEA,IJjEMC,IGwIFmU,EF9CCypK,KE8CM,CAAC+I,GF9CE,CAAC3hK,ED1FS,GAAA9vB,AGwIH,CF9CA,EE8CG,CF9CA6pL,GD1FA,CAAA/+K,IGwIS,KF9CI,CAAE49K,QD1Ff,CC0FwB,CAAC54J,CD1FtB,IAAI,CC0FwB,GAAG9U,KAAM,CAAC;ADzFjE,IAAMjQ,IC2FF,AE6CAkU,OAAO,CAAC2yK,QAAQ,CAAE9/B,CHxIM,GAAA9xJ,AGwIF,EAAE,EAAE,EAAE,CHxIJ,CAAA+K,AGwIO,CAAC,qBHxIR,GAAG,KAAK;AACpC,AImEA,IJnEMC,EGyIH,EF7CCwL,MAAM,CAACoZ,WD5FiB,GAAA5vB,EC4FD,CAAE0oL,ID5FD,CAAA19K,IC4FW,CAAC,iBD5FZ,GAAG,KAAK;AACpC,AImEA,IJnEMC,EG0IH,GCvEM8oL,CDuEAztK,OAAO,EH1IK,CG0IF,ACvECytK,CAACzpI,CJnEAtqD,EG0IE+9H,CCvEE,EAAE,EJnEN,CAAA9yH,cG0Ie,CH1If,AG0IiBgR,GH1Id,GG0IqB,CH1IjB,AG0IkB;AHxI9C,EImEE,EJnEI/Q,EG0IH,EF/CC,KE+CM,IAAI+hF,GH1IQ,GAAAjtF,OAAA,CAAAkL,OG0IM,CAAE,QH1IR,GAAG,GAAG;AAC5B,EImEE,EJnEIC,EImEAorL,EHwBF//K,AE8C4ByvB,GAAG,EAAE3f,CF9C3B,AGxBI,CHwBHoH,EGxBM,EJnEI,CGyIuB,CCtEvB2hK,CJnEArvL,OAAA,CAAAmL,AC2FK,CAAEg+K,WAAY,CAAC,ED3FpB,AImEW,CAAC,CAAC,CJnEV,GAAG;AAC3B,IAAM/9K,IC4FF0xB,AE4C0C6T,QF5ClC,CAAC/8B,CE4C2C,EHxIlC,AGwIoC,CF5CzC,CAAEmuC,CD5FG/hD,IC4FE,CAAClB,ED5FH,CAAAsM,GC4FU,CAAC,CAACyI,GAAG,CAAE2C,MAAO,CD5FxB,AC4FyB,GD5FtB,GAAG;AAC5B,EImEE,EJnEInL,EGuI0D,CAAE,CF1C9D02C,AE0C+D,KF1C1D,CAACvwB,MAAM,CAACgF,GD7FS,GAAAx2B,AC6FH,CAAE+hD,KAAK,CD7FJ,AC6FKjjD,CD7FLuM,KC6FY,CAAC,cD7Fb,GAAG,GAAG;AAChC,EImEE,EJnEIC,AGwIJ,ECrEIkrL,EH2BF,IAAKz0I,CG3BI,GAAGw0I,CH2BF,CAACpP,ID9FS,EImEA,CJnEAnnL,AImEC+iB,KAAK,CH2BF,AG3BGunC,CJnEP,CAAAh/C,EImEW,CH2BF,AG3BG,IH2BC,EAAG,SD9FhB,GAAG,GAAG;AAC9B,IAAMC,AGuIH,MFxCEm+K,CEwCF5lE,KAAA,OHvIsB,CC+FN,CAACpuG,CD/FK1V,IC+FA,GD/FA,CAAAuL,AC+FM,CAAC,GAAGw2C,KAAK,CAACqlI,SD/FhB,GAAG,CC+F4B,ED/FzB;AAC/B,EGwIC,ACrEC,EJnEI57K,MC+FDk+K,cAAc,CAAC35J,ED/FS,CC+FN,ED/FM/vB,EC+FA,CAAC,GAAG+hD,CD/FJ,CAAAv2C,GC+FS,CAAC47K,aAAe,MD/FzB,GAAG,GAAG;AACnC,EGuIE,ACpEA,EJnEI37K,EImEAomJ,GDoEJ1yJ,CFvCGwqL,AG7BK,GAAG,IAAI8M,EH6BH,CAACpiL,CDhGQ,AGuIrB,ACpEmB,CDoEnB27K,ACpEoB,CAACwG,CJnEAx2L,MImEO,CJnEP,AImEQ,CJnERyL,AGuIrB,CCpE+B,CH6BJ,CAAE,CAAC,GAAGs2C,KAAK,CAACqlI,IDhGlB,GAAG,GAAG,GCgG0B,CAAC;AD9FxD,AGqIE,EAtTuB9mJ,EHiLnB50B,AIiE6B5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A,KD1HKmV,IC0HIw6K,QD1HQ,YC0HYA,CAAEn/K,KAAK,EAAG;MDxHtC,AC0HA4+K,OD1HO7zL,KAAK,SC0HS,CAAEiV,KAAM,CAAC;IDxH/B,ECyHCy9K,GDzHI74K,OCyHM,CAACL,GDzHI,ACyHD,CAAEvE,KAAK,CAAC++K,OAAO,EAAE/+K,KAAK,CAACg/K,OAAQ,CAAC;IAE/C,EDzHC,OAAOj0L,KAAK,GAAG,YAAY;IAE5B,ACyHA,KDzHK8Z,ICyHIu6K,ODzHO,WCyHWA,CAAEp/K,KAAK,EAAG;MDvHpC,ACyHAs9K,ODzHOvyL,CCyHC,CAACwZ,GDzHG,ACyHA,CAAEvE,EDzHC,GCyHI,CAAC++K,GDzHE,ICyHK,EAAE/+K,KAAK,CAACg/K,OAAQ,CAAC;IDvH7C,ACyHA,KDzHKl6K,UAAU;IC2Hf,EDzHC,OAAO/Z,ACyHCs0L,KDzHI,GAAG,KAAK,QCyHSA,CAAEr/K,KAAK,EAAG;IDvHxC,ECyHCo9K,GDzHIr4K,MCyHK,CAACR,GDzHI,ACyHD,CAAEvE,KAAK,CAAC++K,OAAO,EAAE/+K,KAAK,CAACg/K,OAAQ,CAAC;MDvH7C,ACyHA3B,ODzHOh9K,IAAI,ACyHA,CDzHCa,ACyHAqF,GDzHG,CAAExb,KAAK,CCyHA,CAAEqyL,CDzHC,QCyHQ,EAAED,EDzHE,EAAE,CAAE,GAAI,CAAC,ECyHC,CAAC,CAAC12K,cAAc,CAAE0tC,KAAK,CAACylI,WAAY,CAAC;IDvHrF,ECyHC,GDzHI50K,CCyHE40B,OAAO,EDzHC,CCyHEua,KAAK,CAAC4hE,UAAU;MDvHhC,ACyHA6lE,ODzHOv7K,GCyHG,CDzHC,ACyHC,CDzHAa,ACyHC,GDzHE,ACyHCb,CDzHCtV,GCyHG,CAACuV,CDzHC,CCyHC,EDzHE,CCyHC+8K,MDzHM,EAAE,CAAE,ECyHC,CDzHG,ACyHF/7K,CDzHG,ACyHF,GAAGs4B,OAAO,CAAC2kJ,YAAa,CAAC,CAAC,CAAC;IDvHnE,KAAKt5K,SAAS;MAEb,ACuHA84K,ODvHO19K,CCuHC,CAAE,CAAC,CDvHA,CAACa,CCuHEb,EDvHC,CAAEtV,CCuHC,CAACuV,EAAE,CDvHC,ECuHE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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '159';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget legacyMode() {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\treturn ! this.enabled;\n\n\t},\n\n\tset legacyMode( legacyMode ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\tthis.enabled = ! legacyMode;\n\n\t},\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0\n\t\t}, options );\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps;\n\t\tthis.texture.internalFormat = options.internalFormat;\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\tconsole.warn( 'THREE.BufferAttribute: \"updateRange\" is deprecated and removed in r169. Use \"addUpdateRange()\" instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // deprecated\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( range.start, range.start + range.count ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// deprecated\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\nemptyShadowTexture.compareFunction = LessEqualCompare;\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true && glInternalFormat !== RGB_ETC1_Format );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = ( isWebGL2 === true ) ? _gl.DEPTH_COMPONENT24 : _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst tempValues = [];\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\tconst infos = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\tconst value = values[ j ];\n\n\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t}\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += infos.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n\tget physicallyCorrectLights() { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\treturn ! this.useLegacyLights;\n\n\t}\n\n\tset physicallyCorrectLights( value ) { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\tthis.useLegacyLights = ! value;\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\tconsole.warn( 'THREE.InterleavedBuffer: \"updateRange\" is deprecated and removed in r169. Use \"addUpdateRange()\" instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst ID_ATTR_NAME = 'batchId';\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxGeometryCount() {\n\n\t\treturn this._maxGeometryCount;\n\n\t}\n\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\n\t\tthis._visibility = [];\n\t\tthis._active = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxGeometryCount = maxGeometryCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\n\t\tthis._initMatricesTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxGeometryCount = this._maxGeometryCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new srcAttribute.constructor( dstArray, itemSize, normalized );\n\t\t\t\tdstAttribute.setUsage( srcAttribute.usage );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\tconst indexArray = maxVertexCount > 65536\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst idArray = maxGeometryCount > 65536\n\t\t\t\t? new Uint32Array( maxVertexCount )\n\t\t\t\t: new Uint16Array( maxVertexCount );\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry atributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\n\n\t\t}\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst active = this._active;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst active = this._active;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\n\t\t// push new visibility states\n\t\tvisibility.push( true );\n\t\tactive.push( true );\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// initialize matrix information\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// set the id for the geometry\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\n\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\n\n\t\t}\n\n\t\tidAttribute.needsUpdate = true;\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( id, geometry ) {\n\n\t\tif ( id >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ id ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ id ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ id ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn id;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst active = this._active;\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tactive[ geometryId ] = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ id ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ id ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( geometryId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( geometryId, matrix ) {\n\n\t\tconst active = this._active;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\n\n\t}\n\n\tsetVisibleAt( geometryId, value ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tif (\n\t\t\tgeometryId >= geometryCount ||\n\t\t\tactive[ geometryId ] === false ||\n\t\t\tvisibility[ geometryId ] === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvisibility[ geometryId ] = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( geometryId ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// return early if the geometry is out of range or not active\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn visibility[ geometryId ];\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst drawRange = drawRanges[ i ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._visibility = source._visibility.slice();\n\t\tthis._active = source._active.slice();\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst visibility = this._visibility;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.isWebGPURenderer ? WebGPUCoordinateSystem : WebGLCoordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] ) {\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _vector$5.distanceTo( _sphere$2.center );\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] ) {\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ i ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, createCanvasElement, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update( deltaTime = null ) {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle( deltaTime ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\t\t\tscope.target.sub( scope.cursor );\n\t\t\t\tscope.target.clampLength( scope.minTargetRadius, scope.maxTargetRadius );\n\t\t\t\tscope.target.add( scope.cursor );\n\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t\t\t// we adjust zoom later in these cases\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust camera position\n\t\t\t\tlet zoomChanged = false;\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\n\n\t\t\t\t\tlet newRadius = null;\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t\t\t// this method avoids floating point error\n\t\t\t\t\t\tconst prevRadius = offset.length();\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\n\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tnewRadius = offset.length();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\t\t\tscope.zoomToCursor = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle the placement of the target\n\t\t\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t\t\t.add( scope.object.position );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\n\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t\t\t// extremely large values\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\n\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tperformCursorZoom = false;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > 0 ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst dollyDirection = new Vector3();\n\t\tconst mouse = new Vector2();\n\t\tlet performCursorZoom = false;\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle( deltaTime ) {\n\n\t\t\tif ( deltaTime !== null ) {\n\n\t\t\t\treturn ( 2 * Math.PI / 60 * scope.autoRotateSpeed ) * deltaTime;\n\n\t\t\t} else {\n\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateMouseParameters( event ) {\n\n\t\t\tif ( ! scope.zoomToCursor ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tperformCursorZoom = true;\n\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\n\t\t\tconst x = event.clientX - rect.left;\n\t\t\tconst y = event.clientY - rect.top;\n\t\t\tconst w = rect.width;\n\t\t\tconst h = rect.height;\n\n\t\t\tmouse.x = ( x / w ) * 2 - 1;\n\t\t\tmouse.y = - ( y / h ) * 2 + 1;\n\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( scope.object ).sub( scope.object.position ).normalize();\n\n\t\t}\n\n\t\tfunction clampDistance( dist ) {\n\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","import {\n\tColor,\n\tMatrix3,\n\tVector2,\n\tVector3\n} from 'three';\n\nclass OBJExporter {\n\n\tparse( object ) {\n\n\t\tlet output = '';\n\n\t\tlet indexVertex = 0;\n\t\tlet indexVertexUvs = 0;\n\t\tlet indexNormals = 0;\n\n\t\tconst vertex = new Vector3();\n\t\tconst color = new Color();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\tconst face = [];\n\n\t\tfunction parseMesh( mesh ) {\n\n\t\t\tlet nbVertex = 0;\n\t\t\tlet nbNormals = 0;\n\t\t\tlet nbVertexUvs = 0;\n\n\t\t\tconst geometry = mesh.geometry;\n\n\t\t\tconst normalMatrixWorld = new Matrix3();\n\n\t\t\t// shortcuts\n\t\t\tconst vertices = geometry.getAttribute( 'position' );\n\t\t\tconst normals = geometry.getAttribute( 'normal' );\n\t\t\tconst uvs = geometry.getAttribute( 'uv' );\n\t\t\tconst indices = geometry.getIndex();\n\n\t\t\t// name of the mesh object\n\t\t\toutput += 'o ' + mesh.name + '\\n';\n\n\t\t\t// name of the mesh material\n\t\t\tif ( mesh.material && mesh.material.name ) {\n\n\t\t\t\toutput += 'usemtl ' + mesh.material.name + '\\n';\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tif ( vertices !== undefined ) {\n\n\t\t\t\tfor ( let i = 0, l = vertices.count; i < l; i ++, nbVertex ++ ) {\n\n\t\t\t\t\tvertex.fromBufferAttribute( vertices, i );\n\n\t\t\t\t\t// transform the vertex to world space\n\t\t\t\t\tvertex.applyMatrix4( mesh.matrixWorld );\n\n\t\t\t\t\t// transform the vertex to export format\n\t\t\t\t\toutput += 'v ' + vertex.x + ' ' + vertex.y + ' ' + vertex.z + '\\n';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tfor ( let i = 0, l = uvs.count; i < l; i ++, nbVertexUvs ++ ) {\n\n\t\t\t\t\tuv.fromBufferAttribute( uvs, i );\n\n\t\t\t\t\t// transform the uv to export format\n\t\t\t\t\toutput += 'vt ' + uv.x + ' ' + uv.y + '\\n';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\tnormalMatrixWorld.getNormalMatrix( mesh.matrixWorld );\n\n\t\t\t\tfor ( let i = 0, l = normals.count; i < l; i ++, nbNormals ++ ) {\n\n\t\t\t\t\tnormal.fromBufferAttribute( normals, i );\n\n\t\t\t\t\t// transform the normal to world space\n\t\t\t\t\tnormal.applyMatrix3( normalMatrixWorld ).normalize();\n\n\t\t\t\t\t// transform the normal to export format\n\t\t\t\t\toutput += 'vn ' + normal.x + ' ' + normal.y + ' ' + normal.z + '\\n';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tif ( indices !== null ) {\n\n\t\t\t\tfor ( let i = 0, l = indices.count; i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( let m = 0; m < 3; m ++ ) {\n\n\t\t\t\t\t\tconst j = indices.getX( i + m ) + 1;\n\n\t\t\t\t\t\tface[ m ] = ( indexVertex + j ) + ( normals || uvs ? '/' + ( uvs ? ( indexVertexUvs + j ) : '' ) + ( normals ? '/' + ( indexNormals + j ) : '' ) : '' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// transform the face to export format\n\t\t\t\t\toutput += 'f ' + face.join( ' ' ) + '\\n';\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = 0, l = vertices.count; i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( let m = 0; m < 3; m ++ ) {\n\n\t\t\t\t\t\tconst j = i + m + 1;\n\n\t\t\t\t\t\tface[ m ] = ( indexVertex + j ) + ( normals || uvs ? '/' + ( uvs ? ( indexVertexUvs + j ) : '' ) + ( normals ? '/' + ( indexNormals + j ) : '' ) : '' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// transform the face to export format\n\t\t\t\t\toutput += 'f ' + face.join( ' ' ) + '\\n';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update index\n\t\t\tindexVertex += nbVertex;\n\t\t\tindexVertexUvs += nbVertexUvs;\n\t\t\tindexNormals += nbNormals;\n\n\t\t}\n\n\t\tfunction parseLine( line ) {\n\n\t\t\tlet nbVertex = 0;\n\n\t\t\tconst geometry = line.geometry;\n\t\t\tconst type = line.type;\n\n\t\t\t// shortcuts\n\t\t\tconst vertices = geometry.getAttribute( 'position' );\n\n\t\t\t// name of the line object\n\t\t\toutput += 'o ' + line.name + '\\n';\n\n\t\t\tif ( vertices !== undefined ) {\n\n\t\t\t\tfor ( let i = 0, l = vertices.count; i < l; i ++, nbVertex ++ ) {\n\n\t\t\t\t\tvertex.fromBufferAttribute( vertices, i );\n\n\t\t\t\t\t// transform the vertex to world space\n\t\t\t\t\tvertex.applyMatrix4( line.matrixWorld );\n\n\t\t\t\t\t// transform the vertex to export format\n\t\t\t\t\toutput += 'v ' + vertex.x + ' ' + vertex.y + ' ' + vertex.z + '\\n';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( type === 'Line' ) {\n\n\t\t\t\toutput += 'l ';\n\n\t\t\t\tfor ( let j = 1, l = vertices.count; j <= l; j ++ ) {\n\n\t\t\t\t\toutput += ( indexVertex + j ) + ' ';\n\n\t\t\t\t}\n\n\t\t\t\toutput += '\\n';\n\n\t\t\t}\n\n\t\t\tif ( type === 'LineSegments' ) {\n\n\t\t\t\tfor ( let j = 1, k = j + 1, l = vertices.count; j < l; j += 2, k = j + 1 ) {\n\n\t\t\t\t\toutput += 'l ' + ( indexVertex + j ) + ' ' + ( indexVertex + k ) + '\\n';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update index\n\t\t\tindexVertex += nbVertex;\n\n\t\t}\n\n\t\tfunction parsePoints( points ) {\n\n\t\t\tlet nbVertex = 0;\n\n\t\t\tconst geometry = points.geometry;\n\n\t\t\tconst vertices = geometry.getAttribute( 'position' );\n\t\t\tconst colors = geometry.getAttribute( 'color' );\n\n\t\t\toutput += 'o ' + points.name + '\\n';\n\n\t\t\tif ( vertices !== undefined ) {\n\n\t\t\t\tfor ( let i = 0, l = vertices.count; i < l; i ++, nbVertex ++ ) {\n\n\t\t\t\t\tvertex.fromBufferAttribute( vertices, i );\n\t\t\t\t\tvertex.applyMatrix4( points.matrixWorld );\n\n\t\t\t\t\toutput += 'v ' + vertex.x + ' ' + vertex.y + ' ' + vertex.z;\n\n\t\t\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\t\t\tcolor.fromBufferAttribute( colors, i ).convertLinearToSRGB();\n\n\t\t\t\t\t\toutput += ' ' + color.r + ' ' + color.g + ' ' + color.b;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutput += '\\n';\n\n\t\t\t\t}\n\n\t\t\t\toutput += 'p ';\n\n\t\t\t\tfor ( let j = 1, l = vertices.count; j <= l; j ++ ) {\n\n\t\t\t\t\toutput += ( indexVertex + j ) + ' ';\n\n\t\t\t\t}\n\n\t\t\t\toutput += '\\n';\n\n\t\t\t}\n\n\t\t\t// update index\n\t\t\tindexVertex += nbVertex;\n\n\t\t}\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isMesh === true ) {\n\n\t\t\t\tparseMesh( child );\n\n\t\t\t}\n\n\t\t\tif ( child.isLine === true ) {\n\n\t\t\t\tparseLine( child );\n\n\t\t\t}\n\n\t\t\tif ( child.isPoints === true ) {\n\n\t\t\t\tparsePoints( child );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn output;\n\n\t}\n\n}\n\nexport { OBJExporter };\n","import {\n\tBoxGeometry,\n\tCanvasTexture,\n\tColor,\n\tEuler,\n\tMesh,\n\tMeshBasicMaterial,\n\tObject3D,\n\tOrthographicCamera,\n\tQuaternion,\n\tRaycaster,\n\tSprite,\n\tSpriteMaterial,\n\tVector2,\n\tVector3,\n\tVector4\n} from 'three';\n\nclass ViewHelper extends Object3D {\n\n\tconstructor( camera, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.isViewHelper = true;\n\n\t\tthis.animating = false;\n\t\tthis.center = new Vector3();\n\n\t\tconst color1 = new Color( '#ff3653' );\n\t\tconst color2 = new Color( '#8adb00' );\n\t\tconst color3 = new Color( '#2c8fff' );\n\n\t\tconst interactiveObjects = [];\n\t\tconst raycaster = new Raycaster();\n\t\tconst mouse = new Vector2();\n\t\tconst dummy = new Object3D();\n\n\t\tconst orthoCamera = new OrthographicCamera( - 2, 2, 2, - 2, 0, 4 );\n\t\torthoCamera.position.set( 0, 0, 2 );\n\n\t\tconst geometry = new BoxGeometry( 0.8, 0.05, 0.05 ).translate( 0.4, 0, 0 );\n\n\t\tconst xAxis = new Mesh( geometry, getAxisMaterial( color1 ) );\n\t\tconst yAxis = new Mesh( geometry, getAxisMaterial( color2 ) );\n\t\tconst zAxis = new Mesh( geometry, getAxisMaterial( color3 ) );\n\n\t\tyAxis.rotation.z = Math.PI / 2;\n\t\tzAxis.rotation.y = - Math.PI / 2;\n\n\t\tthis.add( xAxis );\n\t\tthis.add( zAxis );\n\t\tthis.add( yAxis );\n\n\t\tconst posXAxisHelper = new Sprite( getSpriteMaterial( color1, 'X' ) );\n\t\tposXAxisHelper.userData.type = 'posX';\n\t\tconst posYAxisHelper = new Sprite( getSpriteMaterial( color2, 'Y' ) );\n\t\tposYAxisHelper.userData.type = 'posY';\n\t\tconst posZAxisHelper = new Sprite( getSpriteMaterial( color3, 'Z' ) );\n\t\tposZAxisHelper.userData.type = 'posZ';\n\t\tconst negXAxisHelper = new Sprite( getSpriteMaterial( color1 ) );\n\t\tnegXAxisHelper.userData.type = 'negX';\n\t\tconst negYAxisHelper = new Sprite( getSpriteMaterial( color2 ) );\n\t\tnegYAxisHelper.userData.type = 'negY';\n\t\tconst negZAxisHelper = new Sprite( getSpriteMaterial( color3 ) );\n\t\tnegZAxisHelper.userData.type = 'negZ';\n\n\t\tposXAxisHelper.position.x = 1;\n\t\tposYAxisHelper.position.y = 1;\n\t\tposZAxisHelper.position.z = 1;\n\t\tnegXAxisHelper.position.x = - 1;\n\t\tnegXAxisHelper.scale.setScalar( 0.8 );\n\t\tnegYAxisHelper.position.y = - 1;\n\t\tnegYAxisHelper.scale.setScalar( 0.8 );\n\t\tnegZAxisHelper.position.z = - 1;\n\t\tnegZAxisHelper.scale.setScalar( 0.8 );\n\n\t\tthis.add( posXAxisHelper );\n\t\tthis.add( posYAxisHelper );\n\t\tthis.add( posZAxisHelper );\n\t\tthis.add( negXAxisHelper );\n\t\tthis.add( negYAxisHelper );\n\t\tthis.add( negZAxisHelper );\n\n\t\tinteractiveObjects.push( posXAxisHelper );\n\t\tinteractiveObjects.push( posYAxisHelper );\n\t\tinteractiveObjects.push( posZAxisHelper );\n\t\tinteractiveObjects.push( negXAxisHelper );\n\t\tinteractiveObjects.push( negYAxisHelper );\n\t\tinteractiveObjects.push( negZAxisHelper );\n\n\t\tconst point = new Vector3();\n\t\tconst dim = 128;\n\t\tconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\n\t\tthis.render = function ( renderer ) {\n\n\t\t\tthis.quaternion.copy( camera.quaternion ).invert();\n\t\t\tthis.updateMatrixWorld();\n\n\t\t\tpoint.set( 0, 0, 1 );\n\t\t\tpoint.applyQuaternion( camera.quaternion );\n\n\t\t\tif ( point.x >= 0 ) {\n\n\t\t\t\tposXAxisHelper.material.opacity = 1;\n\t\t\t\tnegXAxisHelper.material.opacity = 0.5;\n\n\t\t\t} else {\n\n\t\t\t\tposXAxisHelper.material.opacity = 0.5;\n\t\t\t\tnegXAxisHelper.material.opacity = 1;\n\n\t\t\t}\n\n\t\t\tif ( point.y >= 0 ) {\n\n\t\t\t\tposYAxisHelper.material.opacity = 1;\n\t\t\t\tnegYAxisHelper.material.opacity = 0.5;\n\n\t\t\t} else {\n\n\t\t\t\tposYAxisHelper.material.opacity = 0.5;\n\t\t\t\tnegYAxisHelper.material.opacity = 1;\n\n\t\t\t}\n\n\t\t\tif ( point.z >= 0 ) {\n\n\t\t\t\tposZAxisHelper.material.opacity = 1;\n\t\t\t\tnegZAxisHelper.material.opacity = 0.5;\n\n\t\t\t} else {\n\n\t\t\t\tposZAxisHelper.material.opacity = 0.5;\n\t\t\t\tnegZAxisHelper.material.opacity = 1;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst x = domElement.offsetWidth - dim;\n\n\t\t\trenderer.clearDepth();\n\n\t\t\trenderer.getViewport( viewport );\n\t\t\trenderer.setViewport( x, 0, dim, dim );\n\n\t\t\trenderer.render( this, orthoCamera );\n\n\t\t\trenderer.setViewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\n\t\t};\n\n\t\tconst targetPosition = new Vector3();\n\t\tconst targetQuaternion = new Quaternion();\n\n\t\tconst q1 = new Quaternion();\n\t\tconst q2 = new Quaternion();\n\t\tconst viewport = new Vector4();\n\t\tlet radius = 0;\n\n\t\tthis.handleClick = function ( event ) {\n\n\t\t\tif ( this.animating === true ) return false;\n\n\t\t\tconst rect = domElement.getBoundingClientRect();\n\t\t\tconst offsetX = rect.left + ( domElement.offsetWidth - dim );\n\t\t\tconst offsetY = rect.top + ( domElement.offsetHeight - dim );\n\t\t\tmouse.x = ( ( event.clientX - offsetX ) / ( rect.right - offsetX ) ) * 2 - 1;\n\t\t\tmouse.y = - ( ( event.clientY - offsetY ) / ( rect.bottom - offsetY ) ) * 2 + 1;\n\n\t\t\traycaster.setFromCamera( mouse, orthoCamera );\n\n\t\t\tconst intersects = raycaster.intersectObjects( interactiveObjects );\n\n\t\t\tif ( intersects.length > 0 ) {\n\n\t\t\t\tconst intersection = intersects[ 0 ];\n\t\t\t\tconst object = intersection.object;\n\n\t\t\t\tprepareAnimationData( object, this.center );\n\n\t\t\t\tthis.animating = true;\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.update = function ( delta ) {\n\n\t\t\tconst step = delta * turnRate;\n\n\t\t\t// animate position by doing a slerp and then scaling the position on the unit sphere\n\n\t\t\tq1.rotateTowards( q2, step );\n\t\t\tcamera.position.set( 0, 0, 1 ).applyQuaternion( q1 ).multiplyScalar( radius ).add( this.center );\n\n\t\t\t// animate orientation\n\n\t\t\tcamera.quaternion.rotateTowards( targetQuaternion, step );\n\n\t\t\tif ( q1.angleTo( q2 ) === 0 ) {\n\n\t\t\t\tthis.animating = false;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dispose = function () {\n\n\t\t\tgeometry.dispose();\n\n\t\t\txAxis.material.dispose();\n\t\t\tyAxis.material.dispose();\n\t\t\tzAxis.material.dispose();\n\n\t\t\tposXAxisHelper.material.map.dispose();\n\t\t\tposYAxisHelper.material.map.dispose();\n\t\t\tposZAxisHelper.material.map.dispose();\n\t\t\tnegXAxisHelper.material.map.dispose();\n\t\t\tnegYAxisHelper.material.map.dispose();\n\t\t\tnegZAxisHelper.material.map.dispose();\n\n\t\t\tposXAxisHelper.material.dispose();\n\t\t\tposYAxisHelper.material.dispose();\n\t\t\tposZAxisHelper.material.dispose();\n\t\t\tnegXAxisHelper.material.dispose();\n\t\t\tnegYAxisHelper.material.dispose();\n\t\t\tnegZAxisHelper.material.dispose();\n\n\t\t};\n\n\t\tfunction prepareAnimationData( object, focusPoint ) {\n\n\t\t\tswitch ( object.userData.type ) {\n\n\t\t\t\tcase 'posX':\n\t\t\t\t\ttargetPosition.set( 1, 0, 0 );\n\t\t\t\t\ttargetQuaternion.setFromEuler( new Euler( 0, Math.PI * 0.5, 0 ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'posY':\n\t\t\t\t\ttargetPosition.set( 0, 1, 0 );\n\t\t\t\t\ttargetQuaternion.setFromEuler( new Euler( - Math.PI * 0.5, 0, 0 ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'posZ':\n\t\t\t\t\ttargetPosition.set( 0, 0, 1 );\n\t\t\t\t\ttargetQuaternion.setFromEuler( new Euler() );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'negX':\n\t\t\t\t\ttargetPosition.set( - 1, 0, 0 );\n\t\t\t\t\ttargetQuaternion.setFromEuler( new Euler( 0, - Math.PI * 0.5, 0 ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'negY':\n\t\t\t\t\ttargetPosition.set( 0, - 1, 0 );\n\t\t\t\t\ttargetQuaternion.setFromEuler( new Euler( Math.PI * 0.5, 0, 0 ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'negZ':\n\t\t\t\t\ttargetPosition.set( 0, 0, - 1 );\n\t\t\t\t\ttargetQuaternion.setFromEuler( new Euler( 0, Math.PI, 0 ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error( 'ViewHelper: Invalid axis.' );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tradius = camera.position.distanceTo( focusPoint );\n\t\t\ttargetPosition.multiplyScalar( radius ).add( focusPoint );\n\n\t\t\tdummy.position.copy( focusPoint );\n\n\t\t\tdummy.lookAt( camera.position );\n\t\t\tq1.copy( dummy.quaternion );\n\n\t\t\tdummy.lookAt( targetPosition );\n\t\t\tq2.copy( dummy.quaternion );\n\n\t\t}\n\n\t\tfunction getAxisMaterial( color ) {\n\n\t\t\treturn new MeshBasicMaterial( { color: color, toneMapped: false } );\n\n\t\t}\n\n\t\tfunction getSpriteMaterial( color, text = null ) {\n\n\t\t\tconst canvas = document.createElement( 'canvas' );\n\t\t\tcanvas.width = 64;\n\t\t\tcanvas.height = 64;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.beginPath();\n\t\t\tcontext.arc( 32, 32, 16, 0, 2 * Math.PI );\n\t\t\tcontext.closePath();\n\t\t\tcontext.fillStyle = color.getStyle();\n\t\t\tcontext.fill();\n\n\t\t\tif ( text !== null ) {\n\n\t\t\t\tcontext.font = '24px Arial';\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.fillStyle = '#000000';\n\t\t\t\tcontext.fillText( text, 32, 41 );\n\n\t\t\t}\n\n\t\t\tconst texture = new CanvasTexture( canvas );\n\n\t\t\treturn new SpriteMaterial( { map: texture, toneMapped: false } );\n\n\t\t}\n\n\t}\n\n}\n\nexport { ViewHelper };\n","import * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { OBJExporter } from \"three/examples/jsm/exporters/OBJExporter\";\nimport { ViewHelper } from \"three/examples/jsm/helpers/ViewHelper\";\n\nlet renderer, scene;\nfunction init(contours, camera, controls, helper, clock, shape, mesh, geometry) {\n  const scale = 10;\n\n  if (renderer) {\n    renderer.dispose();\n  }\n\n  renderer = new THREE.WebGLRenderer({ antialias: true });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.autoClear = false;\n  document.body.appendChild(renderer.domElement);\n\n  clock = new THREE.Clock();\n  scene = new THREE.Scene();\n  scene.background = new THREE.Color(0x111111);\n\n  // camera\n  camera = new THREE.PerspectiveCamera(40, window.innerWidth / window.innerHeight, 1, 10000);\n  camera.position.set(0, 0, 15 * scale);\n\n  // controls\n  controls = new OrbitControls(camera, renderer.domElement);\n\n  // ambient\n  scene.add(new THREE.AmbientLight());\n\n  // light\n  const directionalLight = new THREE.DirectionalLight(0xfeffff, 7);\n  directionalLight.position.set(-8 * scale, 10 * scale, 20 * scale);\n  const dlhelper = new THREE.DirectionalLightHelper(directionalLight, 10);\n  scene.add(directionalLight);\n\n  const directionalLight2 = new THREE.DirectionalLight(0xfeffff, 7);\n  directionalLight2.position.set(8 * scale, 10 * scale, 20 * scale);\n  const dlhelper2 = new THREE.DirectionalLightHelper(directionalLight2, 10);\n  scene.add(directionalLight2);\n\n  scene.add(dlhelper);\n  scene.add(dlhelper2);\n\n  for (const contour of contours) {\n    if (contour == contours[0]) {\n      const points = contour.map((pt) => new THREE.Vector2(pt.x / scale, pt.y / scale));\n      points.push(points[0]);\n      shape = new THREE.Shape(points);\n      continue;\n    }\n    const hole = contour.map((pt) => new THREE.Vector2(pt.x / scale, pt.y / scale));\n    hole.push(hole[0]);\n    shape.holes.push(new THREE.Shape(hole));\n  }\n\n  // Define extrusion settings\n  let extrudeSettings = {\n    // steps: 15,\n    depth: 500 / scale, // Depth to extrude\n    bevelEnabled: false,\n  };\n\n  geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\n  geometry.center();\n  geometry.rotateX(THREE.MathUtils.degToRad(90));\n  mesh = new THREE.Mesh(geometry);\n\n  // Call the export function\n  exportToOBJ(mesh);\n\n  // Define the threshold (adjust as needed)\n  const threshold = 0.99; // You can adjust this value\n\n  // Get the positions from the BufferGeometry\n  const positions = geometry.getAttribute(\"position\").array;\n\n  const materials = [];\n\n  const colors = [\n    0xeeeeee, // Top\n    0xbfbcb4, // Walls\n  ];\n\n  let colorIndex = 0;\n\n  for (let i = 0; i < positions.length; i += 9) {\n    // Get the vertices of the face\n    const vertex1 = new THREE.Vector3(positions[i], positions[i + 1], positions[i + 2]);\n    const vertex2 = new THREE.Vector3(positions[i + 3], positions[i + 4], positions[i + 5]);\n    const vertex3 = new THREE.Vector3(positions[i + 6], positions[i + 7], positions[i + 8]);\n\n    // Calculate face normal\n    const faceNormal = new THREE.Vector3()\n      .crossVectors(vertex2.sub(vertex1), vertex3.sub(vertex1))\n      .normalize();\n\n    // Calculate the dot product between the face normal and each axis unit vector\n    for (let j = 0; j < colors.length; j++) {\n      const dotProduct = Math.abs(\n        faceNormal.dot(\n          new THREE.Vector3(Math.cos((j * Math.PI) / 3), Math.sin((j * Math.PI) / 3), 0),\n        ),\n      );\n\n      // Check if the face is approximately perpendicular to an axis within the threshold\n      if (dotProduct >= threshold) {\n        const material = new THREE.MeshStandardMaterial({\n          color: colors[colorIndex],\n          roughness: 0.1,\n          metalness: 0.5,\n          side: THREE.BackSide,\n        });\n        materials.push(material);\n        colorIndex = (colorIndex + 1) % colors.length;\n        break;\n      }\n    }\n  }\n\n  scene.add(new THREE.Mesh(geometry, materials));\n\n  var geom = new THREE.EdgesGeometry(mesh.geometry);\n\n  var lineMaterial = new THREE.LineBasicMaterial({ color: 0xababa9 });\n  var wireframe = new THREE.LineSegments(geom, lineMaterial);\n  // wireframe.rotateX(THREE.MathUtils.degToRad(90));\n  // scene.add( wireframe );\n\n  const boundingBox = mesh.geometry.boundingBox;\n  const mesh_length = boundingBox.max.x - boundingBox.min.x;\n  const mesh_height = boundingBox.max.y - boundingBox.min.y;\n  const mesh_width = boundingBox.max.z - boundingBox.min.z;\n\n  for (let i = 0; i < 10; i++) {\n    const shapegeo = new THREE.ShapeGeometry(shape);\n    shapegeo.center();\n    const planegeometry = new THREE.EdgesGeometry(shapegeo);\n    planegeometry.translate(0, 0, (-1 * mesh_height) / 2 + scale * i * 0.2);\n    planegeometry.rotateX(THREE.MathUtils.degToRad(90));\n    const material = new THREE.LineBasicMaterial({\n      color: 0xababa9,\n      side: THREE.DoubleSide,\n      transparent: true,\n    });\n    scene.add(new THREE.LineSegments(planegeometry, material));\n  }\n\n  // helper\n  helper = new ViewHelper(camera, renderer.domElement);\n  helper.controls = controls;\n  helper.controls.center = controls.target;\n  const div = document.createElement(\"div\");\n  div.id = \"viewHelper\";\n  div.style.position = \"absolute\";\n  div.style.right = 0;\n  div.style.bottom = 0;\n  div.style.height = \"128px\";\n  div.style.width = \"128px\";\n\n  // document.body.appendChild( div );\n\n  div.addEventListener(\"pointerup\", (event) => helper.handleClick(event));\n  // helper.div.addEventListener( 'pointerup', (event) => helper.handleClick( event ) );\n\n  function animate() {\n    requestAnimationFrame(animate);\n    const delta = clock.getDelta();\n\n    if (helper.animating) helper.update(delta);\n\n    renderer.setViewport(0, 0, window.innerWidth, window.innerHeight);\n    renderer.setScissor(0, 0, window.innerWidth, window.innerHeight);\n    renderer.setScissorTest(true);\n\n    renderer.clear();\n\n    renderer.render(scene, camera);\n    helper.render(renderer);\n  }\n\n  animate();\n}\n\nlet imgElement = document.getElementById(\"imageSrc\");\nlet inputElement = document.getElementById(\"fileInput\");\ninputElement.addEventListener(\n  \"change\",\n  (e) => {\n    imgElement.src = URL.createObjectURL(e.target.files[0]);\n  },\n  false,\n);\nimgElement.onload = function () {\n  // Assuming 'imageId' is the ID of an img tag from which you want to read\n  let src = cv.imread(imgElement);\n\n  let dst = new cv.Mat();\n  let gray = new cv.Mat();\n  // Convert to grayscale\n  cv.cvtColor(src, gray, cv.COLOR_RGBA2GRAY, 0);\n\n  // Threshold or use edge detection\n  cv.threshold(gray, dst, 127, 255, cv.THRESH_BINARY_INV);\n\n  // Find contours\n  let allContours = new cv.MatVector();\n  let hierarchy = new cv.Mat();\n  cv.findContours(dst, allContours, hierarchy, cv.RETR_TREE, cv.CHAIN_APPROX_SIMPLE);\n  // allContours, _ = cv2.findContours(binary, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\n\n  const contours = contoursToJSON(allContours);\n  // contours = allContours.map(contour => Array.from(contour));\n  src.delete();\n  hierarchy.delete();\n  gray.delete();\n  allContours.delete();\n  // console.log(contours);\n\n  init(contours);\n};\nvar Module = {\n  // https://emscripten.org/docs/api_reference/module.html#Module.onRuntimeInitialized\n  onRuntimeInitialized() {\n    document.getElementById(\"status\").innerHTML = \"OpenCV.js is ready.\";\n  },\n};\n\nfunction contoursToJSON(contours) {\n  let jsonContours = [];\n\n  for (let i = 0; i < contours.size(); i++) {\n    let contour = contours.get(i);\n    let points = [];\n\n    for (let j = 0; j < contour.data32S.length; j += 2) {\n      points.push({ x: contour.data32S[j], y: contour.data32S[j + 1] });\n    }\n\n    jsonContours.push(points);\n  }\n\n  return jsonContours;\n}\n\n\n\n// Function to export the geometry to OBJ format\nfunction exportToOBJ(mesh) {\n\n  // Create an OBJ exporter\n  var exporter = new OBJExporter();\n\n  // Export the mesh as an OBJ string\n  var objData = exporter.parse(mesh);\n\n  // Download the OBJ file\n  var blob = new Blob([objData], { type: \"text/plain\" });\n  var link = document.createElement(\"a\");\n  link.href = URL.createObjectURL(blob);\n  link.download = \"exported_model.obj\";\n  link.click();\n}\n"]}